// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name PlateauMobile
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AVKit
import CommonCrypto
import CoreGraphics
import CoreLocation
import CoreTelephony
import CryptoKit
import Darwin
import Dispatch
import Foundation
import JavaScriptCore
import Lottie
import Mantis
import MapKit
import ObjectiveC
import Photos
import QuartzCore
import Security
import Starscream
import Swift
import UIKit
import WebKit
import YogaKit
import _Concurrency
import _StringProcessing
import ObjectiveC.runtime
@objc @_inheritsConvenienceInitializers @objcMembers public class VCustomComponentCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VCustomComponentViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VCustomComponent : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) public var containerView: UIKit.UIView
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VAppBarCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VAppBarStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VAppBarViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) final public class VAppBar : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc override final public func setupScopedSlotUI()
  @_Concurrency.MainActor(unsafe) @objc override final public func onViewWillAppear()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.VAppBar {
  @_Concurrency.MainActor(unsafe) final public func initialize()
  @_Concurrency.MainActor(unsafe) final public func initializeUI()
  @_Concurrency.MainActor(unsafe) final public func initializeBindings()
  @_Concurrency.MainActor(unsafe) final public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VInlineDatepickerStyleProps : PlateauMobile.InputBaseStyleProps {
  @objc public var menuDefaultDateFontColor: Swift.String
  @objc public var menuDefaultDateFontFamily: Swift.String
  @objc public var menuDefaultDateFontSize: Swift.String
  @objc public var menuDefaultDateFontStyle: Swift.String
  @objc public var menuDefaultDateFontWeight: Swift.Int
  @objc public var menuSelectedDateColor: Swift.String
  @objc public var menuSelectedDateFontFamily: Swift.String
  @objc public var menuSelectedDateFontSize: Swift.String
  @objc public var menuSelectedDateFontStyle: Swift.String
  @objc public var menuSelectedDateFontWeight: Swift.Int
  @objc public var menuTitleFontColor: Swift.String
  @objc public var menuTitleFontFamily: Swift.String
  @objc public var menuTitleFontSize: Swift.String
  @objc public var menuTitleFontStyle: Swift.String
  @objc public var menuTitleFontWeight: Swift.Int
  @objc public var menuContentFontColor: Swift.String
  @objc public var menuContentFontFamily: Swift.String
  @objc public var menuContentFontSize: Swift.String
  @objc public var menuContentFontStyle: Swift.String
  @objc public var menuContentDateFontWeight: Swift.Int
  @objc public var menuBackgroundColor: Swift.String
  @objc public var selectedColor: Swift.String
  @objc public var defaultBorderSize: Swift.String
  @objc public var menuBoxShadow: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VInlineDatepickerCss : PlateauMobile.InputBaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VInlineDatepickerViewModel : PlateauMobile.InputBaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VInlineDatepicker : PlateauMobile.InputBase {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
public enum FieldType : Swift.Int {
  case regular
  case placeholder
  case outlined
  case filled
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public struct TextInputsConstant {
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class TextInputs : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) public func prepareTxtView()
  @objc @_Concurrency.MainActor(unsafe) public func prepareTitle()
  @objc @_Concurrency.MainActor(unsafe) public func setupUnderlineView()
  @objc @_Concurrency.MainActor(unsafe) public func textContainerHeightConstraint() -> UIKit.NSLayoutConstraint
  @objc @_Concurrency.MainActor(unsafe) public func onTap(_ sender: UIKit.UITapGestureRecognizer)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class QMUIButtonViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxColumnChooserCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class DxColumnChooserViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxColumnChooser : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) public var getMenu: UIKit.UIView {
    get
  }
  @_Concurrency.MainActor(unsafe) public func showMenu()
  @_Concurrency.MainActor(unsafe) public func hideMenu()
  @_Concurrency.MainActor(unsafe) public func onDrop(column: PlateauMobile.Column)
  @_Concurrency.MainActor(unsafe) public func getColumnKey() -> Swift.String?
  @_Concurrency.MainActor(unsafe) public func isDragAndDrop() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func updateColumns(values: [PlateauMobile.Column])
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VSlideGroupCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VSlideGroupStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var innerBoxShadow: Swift.String
  @objc public var activeArrowsColor: Swift.String
  @objc public var inactiveArrowsColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VSlideGroupViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VSlideGroup : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, UIKit.UIScrollViewDelegate {
  @_Concurrency.MainActor(unsafe) public func toggle()
  @_Concurrency.MainActor(unsafe) public var currentlyVisibleIndex: Swift.Int? {
    get
  }
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override public func onViewDidAppear()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.VSlideGroup {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
extension PlateauMobile.VSlideGroup {
  @_Concurrency.MainActor(unsafe) public func stop()
}
@_hasMissingDesignatedInitializers public class DataTableGroup {
  public var key: Swift.String
  public var isCollapsed: Swift.Bool
  public var list: [Swift.Int] {
    get
    set
  }
  public var visibleList: [Swift.Int]
  public static func initList(group_by: Swift.String, items: [Swift.Dictionary<Swift.String, Any>]) -> [PlateauMobile.DataTableGroup]
  public func updateList(visibleItems: [Swift.Int])
  @objc deinit
}
@_hasMissingDesignatedInitializers public class DataTableReservedStrings {
  @objc deinit
}
public enum DataTableDataType : Swift.String {
  case string
  case double
  case bool
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class CssHelper {
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class QBSimulatorManager : ObjectiveC.NSObject {
  public static let shared: PlateauMobile.QBSimulatorManager
  public var staticClientId: Swift.String
  public var staticSimulatorType: Swift.String
  public var wsrsBaseUrl: Swift.String
  public var debugMode: Swift.Bool
  public var simulatorMode: Swift.Bool
  public var simulatorType: Swift.String
  public var socket: Starscream.WebSocket?
  public var isDrawing: Swift.Bool
  public typealias Closure = (_ val: Any) -> Swift.Void
  public func closeConnection()
  public func clientLogRequest(level: Swift.String, items: [Any], source: Swift.String)
  public func debugModeSet(debugMode: Swift.Bool)
  public func getQJson(path: Swift.String, success: JavaScriptCore.JSValue)
  public func getRequestRespose(path: Swift.String, method: Swift.String, body: [Swift.String : Any]?, headers: [Swift.AnyHashable : Any]?, responseCb: JavaScriptCore.JSValue, failCb: JavaScriptCore.JSValue)
  public func dataToJsonDict(jsonData: Foundation.Data) -> [Swift.String : Swift.String]
  public func getSettingsResponse(path: Swift.String, responseCb: @escaping (Any) -> Swift.Void, failCb: @escaping () -> Swift.Void)
  public func getResourceResponse(path: Swift.String, responseCb: @escaping (Any) -> Swift.Void, failCb: @escaping () -> Swift.Void)
  public func socketConnection()
  public func resolveSimulatorMessageMessage(string: Swift.String, json: [Swift.String : Swift.AnyObject])
  public func popAlertAndRestartToQRScanner(alertMessage: Swift.String, reScan: Swift.Bool = false)
  public func exitSimulator()
  @objc override dynamic public init()
  @objc deinit
}
public enum QPermissionType : Swift.String {
  case camera
  case gallery
  case location
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@objc public protocol QPermissionManagementProtocol {
  @objc func hasPermission(permissions: [Swift.String]?) -> Swift.Bool
  @objc func requestRuntimePermissions(permissions: [Swift.String]?, listener: PlateauMobile.QRuntimePermissionListenerProtocol)
}
@objc public protocol QRuntimePermissionListenerProtocol {
  @objc func onRuntimePermissionDenied(deniedPermissions: [Swift.String]?)
  @objc func onRuntimePermissionGranted(grantedPermissions: [Swift.String]?)
  @objc func onNeverAskAgainRuntimePermission(neverAskPermissions: [Swift.String]?)
}
public protocol QMComponent {
  func initialize()
  func initializeUI()
  func initializeBindings()
  func initializeStyle()
  func onValidate(validationResult: [Swift.String : Any])
  func onPreRender()
  func onPostRender()
  func onViewWillAppear()
  func willLayoutApply()
  func resizeSelf()
  func onViewDidAppear()
  func setupScopedSlotUI()
  func setupScopedSlots()
  func onScreenScroll(scrollView: UIKit.UIScrollView)
}
extension PlateauMobile.QMComponent {
  public func onPreRender()
  public func initDefaultSlot()
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class BaseComponent : UIKit.UIView, PlateauMobile.BaseViewModelDelegate, PlateauMobile.BaseStyleDelegate, PlateauMobile.QRuntimePermissionListenerProtocol {
  @_Concurrency.MainActor(unsafe) @objc public func onRuntimePermissionDenied(deniedPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc public func onRuntimePermissionGranted(grantedPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc public func onNeverAskAgainRuntimePermission(neverAskPermissions: [Swift.String]?)
  @objc @_Concurrency.MainActor(unsafe) open var viewModel: PlateauMobile.BaseViewModel
  @_Concurrency.MainActor(unsafe) open var styleProps: PlateauMobile.BaseStyleProps
  @_Concurrency.MainActor(unsafe) open var observation: Foundation.NSKeyValueObservation?
  @_Concurrency.MainActor(unsafe) open var style: PlateauMobile.BaseCss
  @_Concurrency.MainActor(unsafe) open var slots: [Swift.String : UIKit.UIView]
  @_Concurrency.MainActor(unsafe) open var scopedSlots: [Swift.String : UIKit.UIView]
  @_Concurrency.MainActor(unsafe) open var parentUID: Swift.String
  @_Concurrency.MainActor(unsafe) open var elevation: Swift.Double {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var yogaIsEnabled: Swift.Bool
  @_Concurrency.MainActor(unsafe) open var defaultOnlySlot: Swift.Bool
  @_Concurrency.MainActor(unsafe) open var embededStyles: Swift.String
  @_Concurrency.MainActor(unsafe) public var isSlotAdded: Swift.Bool
  @_Concurrency.MainActor(unsafe) open func applyUIUpdates()
  @_Concurrency.MainActor(unsafe) open func applyStyleUpdates()
  @_Concurrency.MainActor(unsafe) open func applyErrors(errorMessage: Any?)
  @_Concurrency.MainActor(unsafe) open func applyFlexStylesProperties()
  @_Concurrency.MainActor(unsafe) open func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) open func applyResizeForStyles()
  @_Concurrency.MainActor(unsafe) open func applyMarginsForStyles()
  @_Concurrency.MainActor(unsafe) open func applyPaddingsForStyles()
  @_Concurrency.MainActor(unsafe) open func setShadows()
  @_Concurrency.MainActor(unsafe) open func setBorders()
  @_Concurrency.MainActor(unsafe) open func setCorners()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func qminit()
  @_Concurrency.MainActor(unsafe) public func setDisabled(status: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public func setVisible(status: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public func applyCommponentStyleFixes()
  @_Concurrency.MainActor(unsafe) public func setPropValue(prop: [Swift.String : Any])
  @_Concurrency.MainActor(unsafe) public func setStyle(style: [Swift.String : Swift.String])
  @_Concurrency.MainActor(unsafe) public func fixAbsoluteAndFixed(styles: [Swift.String : [Swift.String : Swift.String]], comp: PlateauMobile.BaseComponent)
  @_Concurrency.MainActor(unsafe) public func setStyleOfSlots(comp: PlateauMobile.BaseComponent, styles: [Swift.String : [Swift.String : Swift.String]])
  @_Concurrency.MainActor(unsafe) public func setStyleOfScopedSlots(comp: PlateauMobile.BaseComponent, styles: [Swift.String : [Swift.String : Swift.String]])
  @_Concurrency.MainActor(unsafe) public func executeValidationsSingleResult(value: Any) -> Any
  @_Concurrency.MainActor(unsafe) public func executeValidationsMultipleResult(value: Any) -> [Any]
  @_Concurrency.MainActor(unsafe) public func getCompStyles() -> Swift.String
  @_Concurrency.MainActor(unsafe) public func gatherPropertyStyles() -> Swift.String
  @objc @_Concurrency.MainActor(unsafe) open func setupScopedSlots()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func layoutSubviews()
  @objc @_Concurrency.MainActor(unsafe) open func setupScopedSlotUI()
  @objc @_Concurrency.MainActor(unsafe) open func onPostRender()
  @objc @_Concurrency.MainActor(unsafe) open func onViewDidAppear()
  @objc @_Concurrency.MainActor(unsafe) open func resizeSelf()
  @objc @_Concurrency.MainActor(unsafe) open func willLayoutApply()
  @objc @_Concurrency.MainActor(unsafe) open func onViewWillAppear()
  @objc @_Concurrency.MainActor(unsafe) open func onScreenScroll(scrollView: UIKit.UIScrollView)
  @objc @_Concurrency.MainActor(unsafe) open func onScreenScrollEnd()
  @objc @_Concurrency.MainActor(unsafe) open func onScreenScrolled(notification: Foundation.NSNotification)
  @objc @_Concurrency.MainActor(unsafe) open func onValidate(validationResult: [Swift.String : Any])
  @objc deinit
}
extension PlateauMobile.BaseComponent {
  @_Concurrency.MainActor(unsafe) public func applyElevation(level: Swift.Double, color: UIKit.UIColor = .black)
  @_Concurrency.MainActor(unsafe) public func call(event: Swift.String, arguments: [Any]?, updateStylesNeeded: Swift.Bool = false)
  @_Concurrency.MainActor(unsafe) public func updateStlyeChangesOnly()
  @_Concurrency.MainActor(unsafe) public func createChildSlots()
  @_Concurrency.MainActor(unsafe) public func createScopedSlot(scopedSlot: Any, params: [Any], cssStylesi: [Swift.String : [Swift.String : Swift.String]] = [:]) -> UIKit.UIView
  @_Concurrency.MainActor(unsafe) public func createScopedSlots()
  @_Concurrency.MainActor(unsafe) public func createChildSlot(slotKey: Swift.String, inView: UIKit.UIView)
  @_Concurrency.MainActor(unsafe) public func configureChildView(child: PlateauMobile.BaseComponent)
  @_Concurrency.MainActor(unsafe) public func applyStylesToChildSlots()
  @_Concurrency.MainActor(unsafe) public func applyStylesToChildSlot(slotKey: Swift.String, inView: UIKit.UIView)
  @_Concurrency.MainActor(unsafe) public func applyFlexStyles()
  @_Concurrency.MainActor(unsafe) public func setCompClass(compUID: Swift.String, addClassList: [Swift.String], removeClassList: [Swift.String])
  @_Concurrency.MainActor(unsafe) public func setClass(compUID: Swift.String, addClassList: [Swift.String], removeClassList: [Swift.String])
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VCarouselCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VCarouselViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VCarouselStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var defaultColor: Swift.String
  @objc public var currentColor: Swift.String
  @objc public var cellBackgroundColor: Swift.String
  @objc public var currentBorderColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VCarousel : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, UIKit.UIScrollViewDelegate {
  @_Concurrency.MainActor(unsafe) public var pageControl: PlateauMobile.PageControl {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var currentlyVisibleIndex: Swift.Int? {
    get
  }
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) override public func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) public func stop()
  @_Concurrency.MainActor(unsafe) @objc public func scrollViewDidEndDecelerating(_ scrollView: UIKit.UIScrollView)
  @_Concurrency.MainActor(unsafe) @objc public func scrollViewDidEndScrollingAnimation(_ scrollView: UIKit.UIScrollView)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
@_hasMissingDesignatedInitializers public class BridgeTester {
  public var undefined: JavaScriptCore.JSValue?
  public var context: JavaScriptCore.JSContext? {
    get
    set
  }
  public class func shared() -> PlateauMobile.BridgeTester
  public static func runScript(script: Swift.String)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VOverlayCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VOverlayViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VOverlayStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var defaultBorderSize: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class VOverlay : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, UIKit.UIScrollViewDelegate {
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class AlertViewCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class AlertViewViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class AlertView : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) public func addChild(elements: [Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class QFrameCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QFrameStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QFrameViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class QFrame : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, WebKit.WKUIDelegate, WebKit.WKNavigationDelegate, UIKit.UIScrollViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewDidAppear()
  @_Concurrency.MainActor(unsafe) override public func setCorners()
  @_Concurrency.MainActor(unsafe) override public func setBorders()
  @_Concurrency.MainActor(unsafe) public func setupWebView()
  @_Concurrency.MainActor(unsafe) @objc public func webView(_ webView: WebKit.WKWebView, didFinish navigation: WebKit.WKNavigation!)
  @_Concurrency.MainActor(unsafe) @objc public func webView(_ webView: WebKit.WKWebView, didStartProvisionalNavigation navigation: WebKit.WKNavigation!)
  @_Concurrency.MainActor(unsafe) @objc public func webView(_ webView: WebKit.WKWebView, didFail navigation: WebKit.WKNavigation!, withError error: Swift.Error)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VFormCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VFormViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VForm : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class GhostCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class GhostViewModel : PlateauMobile.BaseViewModel {
  @objc public var sampleProp: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class Ghost : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc public var alper: Swift.String {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc public func ahmet()
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) public func onTap(_ sender: UIKit.UITapGestureRecognizer)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class InputBaseCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers public class InputBaseStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var labelDefaultFontFamily: Swift.String
  @objc public var labelDefaultFontSize: Swift.String
  @objc public var labelDefaultFontColor: Swift.String
  @objc public var labelDefaultFontStyle: Swift.String
  @objc public var labelDefaultFontWeight: Swift.Int
  @objc public var labelDefaultCombinedFont: Swift.String
  @objc public var defaultFontColor: Swift.String
  @objc public var defaultFontFamily: Swift.String
  @objc public var defaultFontSize: Swift.String
  @objc public var defaultFontStyle: Swift.String
  @objc public var defaultFontWeight: Swift.Int
  @objc public var defaultCombinedFont: Swift.String
  @objc public var PHFontFamily: Swift.String
  @objc public var PHFontSize: Swift.String
  @objc public var PHFontStyle: Swift.String
  @objc public var PHFontColor: Swift.String
  @objc public var PHFontWeight: Swift.Int
  @objc public var PHCombinedFont: Swift.String
  @objc public var inputFontFamily: Swift.String
  @objc public var inputFontSize: Swift.String
  @objc public var inputFontColor: Swift.String
  @objc public var inputFontStyle: Swift.String
  @objc public var inputFontWeight: Swift.Int
  @objc public var inputCombinedFont: Swift.String
  @objc public var cellColor: Swift.String
  @objc public var innerBoxShadow: Swift.String
  @objc public var borderSize: Swift.String
  @objc public var activeBorderColor: Swift.String
  @objc public var cellBackgroundColor: Swift.String
  @objc public var outlined: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class InputBaseViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class InputBase : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, UIKit.UITextFieldDelegate {
  @objc @_Concurrency.MainActor(unsafe) public var inputLabel: UIKit.UILabel
  @objc @_Concurrency.MainActor(unsafe) final public let inputLabelBackgroundView: UIKit.UIView
  @objc @_Concurrency.MainActor(unsafe) override public func applyBackgroundColorForStyles()
  @objc @_Concurrency.MainActor(unsafe) override public func setShadows()
  @objc @_Concurrency.MainActor(unsafe) override public func setCorners()
  @objc @_Concurrency.MainActor(unsafe) override public func setBorders()
  @objc @_Concurrency.MainActor(unsafe) public func setFonts()
  @objc @_Concurrency.MainActor(unsafe) override public func applyStyleUpdates()
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override public func onValidate(validationResult: [Swift.String : Any])
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) override public func applyResizeForStyles()
  @objc @_Concurrency.MainActor(unsafe) public func onTap(_ sender: UIKit.UITapGestureRecognizer)
  @_Concurrency.MainActor(unsafe) @objc public func textFieldDidBeginEditing(_ textField: UIKit.UITextField)
  @_Concurrency.MainActor(unsafe) @objc public func textFieldDidEndEditing(_ textField: UIKit.UITextField)
  @objc @_Concurrency.MainActor(unsafe) public func outlineViewMask()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
@objc @_hasMissingDesignatedInitializers public class RippleLayer : QuartzCore.CALayer, QuartzCore.CAAnimationDelegate {
  public var maskEnabled: Swift.Bool {
    get
    set
  }
  public var rippleEnabled: Swift.Bool
  public var rippleScaleRatio: CoreFoundation.CGFloat {
    get
    set
  }
  public var rippleDuration: Swift.Double
  public var elevation: CoreFoundation.CGFloat {
    get
    set
  }
  public var elevationOffset: CoreFoundation.CGSize {
    get
    set
  }
  public var roundingCorners: UIKit.UIRectCorner {
    get
    set
  }
  public var backgroundAnimationEnabled: Swift.Bool
  public init(superLayer: QuartzCore.CALayer)
  public init(withView view: UIKit.UIView)
  @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  public func superLayerDidResize()
  public func startEffects(atLocation touchLocation: CoreFoundation.CGPoint)
  public func stopEffects()
  public func stopEffectsImmediately()
  public func setRippleColor(color: UIKit.UIColor, withRippleAlpha rippleAlpha: CoreFoundation.CGFloat = 0.3, withBackgroundAlpha backgroundAlpha: CoreFoundation.CGFloat = 0.3)
  public func touchesBegan(touches: Swift.Set<UIKit.UITouch>, withEvent event: UIKit.UIEvent?)
  public func touchesEnded(touches: Swift.Set<UIKit.UITouch>, withEvent event: UIKit.UIEvent?)
  public func touchesCancelled(touches: Swift.Set<UIKit.UITouch>?, withEvent event: UIKit.UIEvent?)
  public func touchesMoved(touches: Swift.Set<UIKit.UITouch>, withEvent event: UIKit.UIEvent?)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VTabItemCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTabItemStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTabItemViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VTabItem : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.VTabItem {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers public class DxSearchPanelCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxSearchPanelViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxSearchPanel : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) public func getHighlightCaseSensitive() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getHighlightSearchText() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getSearchVisibleColumnsOnly() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getHighlightBackgroundColor() -> UIKit.UIColor
  @_Concurrency.MainActor(unsafe) public func getHighlightForegroundColor() -> UIKit.UIColor
  @_Concurrency.MainActor(unsafe) public func getText() -> Swift.String
  @_Concurrency.MainActor(unsafe) public func reset()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class DataTableRowView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) public func reload()
  @objc deinit
}
extension PlateauMobile.DataTableRowView {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func expandClick(sender: UIKit.UITapGestureRecognizer)
  @objc @_Concurrency.MainActor(unsafe) dynamic public func selectClick(sender: UIKit.UITapGestureRecognizer)
  @objc @_Concurrency.MainActor(unsafe) dynamic public func clickRow(sender: UIKit.UITapGestureRecognizer)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VSliderCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VSliderStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var sliderColor: Swift.String
  @objc public var rangeColor: Swift.String
  @objc public var buttonColor: Swift.String
  @objc public var buttonWidthSize: Swift.String
  @objc public var buttonHeightSize: Swift.String
  @objc public var borderRadius: Swift.String
  @objc public var lineSize: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VSliderViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VSlider : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override public func onViewDidAppear()
  @_Concurrency.MainActor(unsafe) public func updateUI()
  @_Concurrency.MainActor(unsafe) public func triggerEvent(eventName: Swift.String)
  @_Concurrency.MainActor(unsafe) public func updateKnobvalue(newKnobValue: Swift.Double)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) override public func applyUIUpdates()
  @objc @_Concurrency.MainActor(unsafe) public func onTap(_ sender: UIKit.UITapGestureRecognizer)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VSheetCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VSheetViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
public protocol BaseStyleDelegate : AnyObject {
}
@objc @_inheritsConvenienceInitializers @objcMembers open class BaseStyleProps : ObjectiveC.NSObject {
  @objc public var paddingTop: Swift.String
  @objc public var paddingBottom: Swift.String
  @objc public var paddingLeft: Swift.String
  @objc public var paddingRight: Swift.String
  @objc public var marginLeft: Swift.String
  @objc public var marginRight: Swift.String
  @objc public var marginTop: Swift.String
  @objc public var marginBottom: Swift.String
  @objc public var width: Swift.String
  @objc public var height: Swift.String
  @objc public var minWidth: Swift.String
  @objc public var minHeight: Swift.String
  @objc public var maxWidth: Swift.String
  @objc public var maxHeight: Swift.String
  @objc public var unlink: Swift.Bool
  @objc public var boxSizing: Swift.String
  @objc public var borderTopStyle: Swift.String
  @objc public var borderRightStyle: Swift.String
  @objc public var borderBottomStyle: Swift.String
  @objc public var borderLeftStyle: Swift.String
  @objc public var borderTopLeftRadius: Swift.String
  @objc public var borderTopRightRadius: Swift.String
  @objc public var borderBottomLeftRadius: Swift.String
  @objc public var borderBottomRightRadius: Swift.String
  @objc public var borderTopWidth: Swift.String
  @objc public var borderRightWidth: Swift.String
  @objc public var borderLeftWidth: Swift.String
  @objc public var borderBottomWidth: Swift.String
  @objc public var defaultBorderColor: Swift.String
  @objc public var innerDefaultBorderColor: Swift.String
  @objc public var innerBorderSize: Swift.String
  @objc public var sides: Swift.String
  @objc public var innerBoxSizing: Swift.String
  @objc public var innerBorderTopStyle: Swift.String
  @objc public var innerBorderRightStyle: Swift.String
  @objc public var innerBorderBottomStyle: Swift.String
  @objc public var innerBorderLeftStyle: Swift.String
  @objc public var innerBorderTopLeftRadius: Swift.String
  @objc public var innerBorderTopRightRadius: Swift.String
  @objc public var innerBorderBottomLeftRadius: Swift.String
  @objc public var innerBorderBottomRightRadius: Swift.String
  @objc public var innerBorderTopWidth: Swift.String
  @objc public var innerBorderRightWidth: Swift.String
  @objc public var innerBorderLeftWidth: Swift.String
  @objc public var innerBorderBottomWidth: Swift.String
  @objc public var innerSides: Swift.String
  @objc public var alignItems: Swift.String
  @objc public var justifyContent: Swift.String
  @objc public var flexBasis: Swift.String
  @objc public var flexDirection: Swift.String
  @objc public var col: Swift.String
  @objc public var backgroundColor: Swift.String
  @objc public var outerBoxShadow: Swift.String
  @objc public var boxShadow: Swift.String
  weak public var baseStyleDelegate: PlateauMobile.BaseStyleDelegate?
  @objc override required dynamic public init()
  @objc required public init(styles: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VTimelineCss : PlateauMobile.BaseCss {
  @objc deinit
  @objc required dynamic public init()
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTimelineViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTimelineStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var lineViewBorderColor: Swift.String
  @objc public var lineViewBorderSize: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VTimeline : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.VTimeline {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
extension PlateauMobile.VTimeline {
  @_Concurrency.MainActor(unsafe) public func setStyleMargins()
}
@_hasMissingDesignatedInitializers open class StyleHelperRenderer {
  public static func readStrFromPath(file: Swift.String) -> Swift.String
  public static func setStyleOfView(view: UIKit.UIView, style: [Swift.String : Any])
  @objc deinit
}
public protocol BaseViewModelDelegate : AnyObject {
  func setDisabled(status: Swift.Bool)
  func applyUIUpdates()
  func applyErrors(errorMessage: Any?)
}
@objc @_inheritsConvenienceInitializers @objcMembers open class BaseViewModel : ObjectiveC.NSObject {
  @objc public var eID: Swift.String
  @objc public var ID: Swift.String
  @objc public var q_UID: Swift.String
  @objc public var _renderingProps: [Swift.String : Any]
  @objc public var _domElements: [Swift.String : Any]
  @objc public var css: PlateauMobile.BaseCss
  @objc public var visible: Swift.Bool
  @objc public var enabled: Swift.Bool
  @objc public var disabled: Swift.Bool {
    @objc get
    @objc set
  }
  @objc public var readonly: Swift.Bool
  @objc public var height: Any
  @objc public var width: Any
  @objc public var maxHeight: Any
  @objc public var maxWidth: Any {
    @objc get
    @objc set
  }
  @objc public var minHeight: Any
  @objc public var minWidth: Any
  @objc public var events: [Swift.String : Any]
  @objc public var asChildType: Swift.String
  @objc public var slots: [Swift.String : [Any]]
  @objc public var scopedSlots: [Swift.String : Any]
  @objc public var compClass: Swift.String
  @objc public var rules: JavaScriptCore.JSValue
  @objc public var compUID: Swift.String
  @objc public var activeClass: Swift.String
  weak public var baseViewModelDelegate: PlateauMobile.BaseViewModelDelegate?
  @objc override required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxRowDraggingCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxRowDraggingViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxRowDragging : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.DxRowDragging {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
extension PlateauMobile.DxRowDragging {
  @_Concurrency.MainActor(unsafe) public func onDrag(gesture: UIKit.UIPanGestureRecognizer)
  @_Concurrency.MainActor(unsafe) public func onDragBegin(view: PlateauMobile.DxRowView, gesture: UIKit.UIPanGestureRecognizer)
  @_Concurrency.MainActor(unsafe) public func onDragEnd(gesture: UIKit.UIPanGestureRecognizer)
  @_Concurrency.MainActor(unsafe) public func showIcons() -> Swift.Bool
}
public enum LogLevel {
  case debugUI
  case release
  case debugAll
  public static func == (a: PlateauMobile.LogLevel, b: PlateauMobile.LogLevel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers public class QBLogger : ObjectiveC.NSObject {
  public class func log(_ message: Swift.String, source: Swift.String = "native", level: Swift.String = "debug")
  public class func log(message: [Any], source: Swift.String, level: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
public struct ComponentInfo {
}
public let kStudioPublishId: Swift.String
public let kStudioAppUrl: Swift.String
public struct CSSS {
}
@_hasMissingDesignatedInitializers @objc(TransferObject) public class TransferObject : ObjectiveC.NSObject {
  @objc deinit
}
public class QuickDelegate : PlateauMobile.QMQuickProtocol {
  public init()
  @objc public func setQuickSettings()
  @objc public func getMainCss() -> Swift.String
  @objc public func hostTrigger(functionName: Swift.String?, param: [Swift.String : Any]?, callBack: JavaScriptCore.JSValue, context: JavaScriptCore.JSContext, pageNames: [Swift.String])
  @objc deinit
}
public class QuickNetworkDelegate : PlateauMobile.QMNetworkDelegateProtocol {
  public init()
  @objc public func sendModelRequest(qjsonPath: Swift.String, success: JavaScriptCore.JSValue, fail: JavaScriptCore.JSValue)
  @objc public func sendRequest(url: Swift.String, method: Swift.String, success: JavaScriptCore.JSValue, fail: JavaScriptCore.JSValue, body: [Swift.String : Any]?, headers: [Swift.String : Any], options: [Swift.String : Any])
  @objc deinit
}
public class QuickBridge {
  public var configuration: PlateauMobile.QBConfiguration
  public var staticJson: Swift.Bool
  public var simulatorJson: Swift.String
  public var undefined: JavaScriptCore.JSValue?
  public var regionalDefinitions: Foundation.NSDictionary
  public static var quickMobileDelegate: PlateauMobile.QMScreenDelegateProtocol?
  public static let studioPublishId: Swift.String
  public static let studioAppUrl: Swift.String
  public var userLocation: PlateauMobile.BridgeHelper.ILocationPosition
  public func resolveRequest(json: Any, success: JavaScriptCore.JSValue, fail: JavaScriptCore.JSValue, error: Any?)
  public func setComponentProperty(obj: PlateauMobile.BaseComponent, propName: JavaScriptCore.JSValue, value: JavaScriptCore.JSValue, type: JavaScriptCore.JSValue)
  public func getProperty(obj: JavaScriptCore.JSValue, prop: JavaScriptCore.JSValue, pageId: JavaScriptCore.JSValue) -> Any
  public func refreshJSContext()
  public var context: JavaScriptCore.JSContext? {
    get
    set
  }
  public func createJSContext() -> JavaScriptCore.JSContext?
  public static var sharedQuickBridge: PlateauMobile.QuickBridge!
  public class func shared() -> PlateauMobile.QuickBridge
  public init()
  public func getTypeOfObjectForEngine(object: Any?) -> Swift.String
  public func qb_initializeContext()
  public func initialize(configuration: PlateauMobile.QBConfiguration, staticJson: Swift.Bool, networkDelegate: PlateauMobile.QMNetworkDelegateProtocol, quickDelegate: PlateauMobile.QMQuickProtocol)
  public func qb_setLanguage(lang: Swift.String)
  public func qb_setEditMode(status: Swift.Bool)
  public func qb_getCSS(includeCached: Swift.Bool, rendererType: Swift.String = "PageRenderer") -> PlateauMobile.CSSS
  public func qb_loadCSS(deviceSettings: Any, css: [Swift.String])
  public func qb_loadDeviceSettings(deviceSettings: Any)
  public func qb_loadGlobalCSS(deviceSettings: Swift.String, css: [Swift.String])
  public func qb_ResetCache()
  public func qb_ResetEngine()
  public func qb_SetPipelineQjson(qjson: Swift.String)
  public func qb_SetCompClass(compUID: Swift.String, addClassList: [Swift.String], removeClassList: [Swift.String])
  public func qb_isPageComplete() -> Swift.Bool
  public func qb_SetAlertQjson(qjson: Swift.String, displayAlertCallback: @escaping (JavaScriptCore.JSValue) -> Swift.Void)
  public func getAndResolveStaticJson(json: Swift.String!, success: JavaScriptCore.JSValue, fail: JavaScriptCore.JSValue, error: Any?, bundle: Swift.String? = "")
  public func getTypeName(object: JavaScriptCore.JSValue) -> Swift.String
  public func getQRSimulator() -> PlateauMobile.QRScannerController
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VTextFieldCss : PlateauMobile.InputBaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VTextFieldViewModel : PlateauMobile.InputBaseViewModel {
  @objc override public var readonly: Swift.Bool {
    @objc get
    @objc set
  }
  @objc public var errorMessages: Any? {
    @objc get
    @objc set
  }
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTextFieldStyleProps : PlateauMobile.InputBaseStyleProps {
  @objc public var innerActiveBorderAndLabelColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class VTextField : PlateauMobile.InputBase {
  @objc @_Concurrency.MainActor(unsafe) public func focus()
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc public func onValidateCheck(validationResult: [Swift.String : Any])
  @objc @_Concurrency.MainActor(unsafe) override public func applyUIUpdates()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @objc @_Concurrency.MainActor(unsafe) override public func applyErrors(errorMessage: Any?)
  @_Concurrency.MainActor(unsafe) @objc public func textField(_ textField: UIKit.UITextField, shouldChangeCharactersIn range: Foundation.NSRange, replacementString string: Swift.String) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.VTextField {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func setComponentColored(hasError: Swift.Bool)
}
@objc @_inheritsConvenienceInitializers public class DxColumnFixingCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxColumnFixingViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxColumnFixing : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.DxColumnFixing {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers @objcMembers open class QBConfiguration : ObjectiveC.NSObject {
  public var logLevel: PlateauMobile.LogLevel
  @objc public var cssUrl: Swift.String
  @objc public var jsonBaseUrl: Swift.String
  @objc public var port: Swift.String
  @objc public var serviceBaseUrl: Swift.String
  @objc public var bridgeFramework: Swift.String
  @objc public var settingsYamlName: Swift.String
  @objc public var bundleId: Swift.String
  @objc public var networkInterface: Swift.Bool
  @objc public var language: Swift.String
  @objc public var simulatorMode: Swift.Bool
  @objc public var simulatorType: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VExpansionPanelContentCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VExpansionPanelContentStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var borderColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VExpansionPanelContentViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc public protocol QMScreenDelegateProtocol {
  @objc optional var parameters: [Swift.String : Any] { get set }
  @objc func showLoadingView()
  @objc func hideLoadingView()
  @objc optional func callMethod(functionName: Swift.String?, param: [Swift.String : Any]?, callBack: JavaScriptCore.JSValue, context: JavaScriptCore.JSContext, pageNames: [Swift.String])
  @objc optional func redirectToNativePage(pageId: Swift.String, parameters: [Swift.String : Any], transitionStyle: Swift.String, animation: Swift.String)
  @objc optional func saveToLocalStorage(key: Swift.String, value: Swift.String)
  @objc optional func getFromLocalStorage(key: Swift.String) -> Swift.String
  @objc optional func clearLocalStorage()
  @objc optional func removeItemFromLocalStorage(key: Swift.String)
}
@objc public protocol QMNetworkDelegateProtocol {
  @objc optional func sendModelRequest(qjsonPath: Swift.String, success: JavaScriptCore.JSValue, fail: JavaScriptCore.JSValue)
  @objc optional func sendRequest(url: Swift.String, method: Swift.String, success: JavaScriptCore.JSValue, fail: JavaScriptCore.JSValue, body: [Swift.String : Any]?, headers: [Swift.String : Any], options: [Swift.String : Any])
}
@objc public protocol QMQuickProtocol {
  @objc func setQuickSettings()
  @objc func getMainCss() -> Swift.String
  @objc func hostTrigger(functionName: Swift.String?, param: [Swift.String : Any]?, callBack: JavaScriptCore.JSValue, context: JavaScriptCore.JSContext, pageNames: [Swift.String])
}
@objc @_Concurrency.MainActor(unsafe) open class QBBaseViewController : UIKit.UIViewController, UIKit.UIScrollViewDelegate, PlateauMobile.QMScreenDelegateProtocol, PlateauMobile.QMNetworkDelegateProtocol, UIKit.UIGestureRecognizerDelegate {
  @_Concurrency.MainActor(unsafe) @objc public func showLoadingView()
  @_Concurrency.MainActor(unsafe) @objc public func hideLoadingView()
  @_Concurrency.MainActor(unsafe) @objc public func saveToLocalStorage(key: Swift.String, value: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc public func getFromLocalStorage(key: Swift.String) -> Swift.String
  @_Concurrency.MainActor(unsafe) @objc public func clearLocalStorage()
  @_Concurrency.MainActor(unsafe) @objc public func removeItemFromLocalStorage(key: Swift.String)
  @_Concurrency.MainActor(unsafe) public static let shared: PlateauMobile.QBBaseViewController
  @_Concurrency.MainActor(unsafe) public var contentView: UIKit.UIView
  @_Concurrency.MainActor(unsafe) public var scrollView: UIKit.UIScrollView
  @_Concurrency.MainActor(unsafe) public var renderedView: UIKit.UIView
  @_Concurrency.MainActor(unsafe) public var activeField: UIKit.UIView?
  @_Concurrency.MainActor(unsafe) public var simulatorMenu: UIKit.UIView?
  @_Concurrency.MainActor(unsafe) public var isViewDidAppear: Swift.Bool
  @_Concurrency.MainActor(unsafe) public var pageId: Swift.String
  @_Concurrency.MainActor(unsafe) public var fixedChilds: [UIKit.UIView]
  @_Concurrency.MainActor(unsafe) @objc dynamic public init()
  @_Concurrency.MainActor(unsafe) public init(pagePath: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var prefersStatusBarHidden: Swift.Bool {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var preferredStatusBarStyle: UIKit.UIStatusBarStyle {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public static func openStudioApp(force: Swift.Bool = false, parameters: [Swift.String : Swift.String] = [:])
  @_Concurrency.MainActor(unsafe) public func addStatusBar()
  @_Concurrency.MainActor(unsafe) public func showLoadingViewBase()
  @_Concurrency.MainActor(unsafe) public func hideLoadingViewBase()
  @_Concurrency.MainActor(unsafe) public class func getDocumentsDirectory() -> Foundation.URL
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public func renderScreen(elements: [Any])
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public func getContentHeight() -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc public func scrollViewDidScroll(_ scrollView: UIKit.UIScrollView)
  @_Concurrency.MainActor(unsafe) @objc public func scrollViewDidEndScrollingAnimation(_ scrollView: UIKit.UIScrollView)
  @objc deinit
}
extension PlateauMobile.QBBaseViewController : PlateauMobile.QPermissionManagementProtocol {
  @_Concurrency.MainActor(unsafe) @objc dynamic open func hasPermission(permissions: [Swift.String]?) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc dynamic open func requestRuntimePermissions(permissions: [Swift.String]?, listener: PlateauMobile.QRuntimePermissionListenerProtocol)
}
extension PlateauMobile.QBBaseViewController : CoreLocation.CLLocationManagerDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func locationManager(_ manager: CoreLocation.CLLocationManager, didChangeAuthorization status: CoreLocation.CLAuthorizationStatus)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func locationManagerDidChangeAuthorization(_ manager: CoreLocation.CLLocationManager)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class OutlineView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open class var layerClass: Swift.AnyClass {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) open var outlineInsets: UIKit.UIEdgeInsets {
    get
    set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) open var lineWidth: CoreFoundation.CGFloat {
    @objc get
    @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) open var lineColor: UIKit.UIColor? {
    @objc get
    @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) open var fillColor: UIKit.UIColor? {
    @objc get
    @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) open var cornerRadius: CoreFoundation.CGFloat {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func layoutSubviews()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VMenuCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VMenuStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VMenuViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VMenu : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) override public func applyResizeForStyles()
  @_Concurrency.MainActor(unsafe) override public func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) override public func setCorners()
  @_Concurrency.MainActor(unsafe) override public func setBorders()
  @_Concurrency.MainActor(unsafe) override public func applyPaddingsForStyles()
  @_Concurrency.MainActor(unsafe) override public func applyMarginsForStyles()
  @_Concurrency.MainActor(unsafe) override public func setShadows()
  @_Concurrency.MainActor(unsafe) @objc override public func setupScopedSlotUI()
  @_Concurrency.MainActor(unsafe) @objc override public func setupScopedSlots()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.VMenu {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class BreadcrumbLabel : UIKit.UILabel {
  @_Concurrency.MainActor(unsafe) public func setUI()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VImgCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VImgStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VImgViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxMasterDetailCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxMasterDetailViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxMasterDetail : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.DxMasterDetail {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
extension PlateauMobile.DxMasterDetail {
  @_Concurrency.MainActor(unsafe) public var expandBackgroundColor: UIKit.UIColor {
    get
  }
  @_Concurrency.MainActor(unsafe) public func onRowSelect(index: Swift.Int)
  @_Concurrency.MainActor(unsafe) public func getCellTemplate() -> Swift.String
  @_Concurrency.MainActor(unsafe) public func checkExpandAll()
}
@objc @_inheritsConvenienceInitializers public class DxFilterRowCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxFilterRowViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class DxFilterRow : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.DxFilterRow {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func reload()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func hideMenu()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func isOnClick() -> Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) dynamic public func getFilterButton() -> UIKit.UIButton
  @objc @_Concurrency.MainActor(unsafe) dynamic public func getFilterOperation(column key: Swift.String) -> Swift.String
  @objc @_Concurrency.MainActor(unsafe) dynamic public func setFilterOperation(column key: Swift.String, operation: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) dynamic public func resetFilters()
}
public enum Icon : Swift.String {
  case checkSelected, checkUnSelected, downArrow, kapat, prev, myIcon, off_icon, on_icon, mdi_chevron_right, mdi_chevron_left, mdi_close, mdi_delete, mdi_email, mdi_eye, mdi_eye_off, mdi_phone, next, temp, user, radioOff, radioOn, edit, mdi_check, mdi_check_circle, circle_medium, mdi_calendar, mdi_radiobox_blank, mdi_radiobox_marked, mdi_paper_clip, mdi_clock_outline, mdi_check_bold, mdi_share_variant, mdi_clock_time_eight_outline, mdi_record, mdi_record_circle, mdi_magnify, mdi_chevron_down, mdi_chevron_up, mdi_navigation, mdi_history, mdi_heart, mdi_map_marker, mdi_calendar_range_outline, mdi_alert_circle, mdi_plus_outline, mdi_information, mdi_minus, mdi_alert, mdi_logout, mdi_file_document_outline, mdi_tray_arrow_down, mdi_file_check_outline, mdi_printer_outline, mdi_checkbox_marked_circle_outline, mdi_phone_settings, mdi_home_city_outline, mdi_account_circle_outline, mdi_lock_outline, mdi_tray_arrow_up, mdi_format_list_bulleted
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum DayAppearanceStyle {
  case none
  case circle
  public static func == (a: PlateauMobile.DayAppearanceStyle, b: PlateauMobile.DayAppearanceStyle) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers public class CalendarUtil {
  public static let kDayButtonSelecteFont: UIKit.UIFont
  public static let kDayButtonSelectedTextColor: UIKit.UIColor
  public static let kDayButtonFont: UIKit.UIFont
  public static let kDayButtonTextColor: UIKit.UIColor
  public static let kDayButtonSelectedBGColor: UIKit.UIColor
  public static let kDayButtonBGColor: UIKit.UIColor
  public static let kDateFormat: Swift.String
  @objc deinit
}
extension PlateauMobile.CalendarUtil {
  public static let headerDefaultFormatter: Foundation.DateFormatter
  public static let headerDefaultMonthFormatter: Foundation.DateFormatter
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VCarouselCell : UIKit.UICollectionViewCell {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VTabsSliderCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers final public class VTabsSliderViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) final public class VTabsSlider : PlateauMobile.BaseComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.VTabsSlider : PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) final public func initialize()
  @_Concurrency.MainActor(unsafe) final public func initializeUI()
  @_Concurrency.MainActor(unsafe) final public func initializeBindings()
  @_Concurrency.MainActor(unsafe) final public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VTimelineItemCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTimelineItemViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTimelineItemStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var outerCircleBorderColor: Swift.String
  @objc public var innerCircleColor: Swift.String
  @objc public var outerCircleBorderSize: Swift.String
  @objc public var iconColor: Swift.String
  @objc public var itemWidth: Swift.String
  @objc public var itemHeight: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VListItemContentCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VListItemContentViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VListItemContent : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.VListItemContent {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class QAnimationCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QAnimationViewModel : PlateauMobile.BaseViewModel {
  @objc public var source: Swift.String
  @objc public var left: Swift.String
  @objc public var right: Swift.String
  @objc public var top: Swift.String
  @objc public var bottom: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QAnimationProps : PlateauMobile.BaseStyleProps {
  @objc public var defaultBorderSize: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class QAnimation : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, UIKit.UIScrollViewDelegate {
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
public class BridgeHelper {
  public init()
  public struct ICookieValue {
  }
  public static func setCookie(key: Swift.String, object: PlateauMobile.BridgeHelper.ICookieValue)
  public static func getCookie(key: Swift.String) -> Any
  public static func getAllCookies() -> Any
  public static func removeCookie(key: Swift.String)
  public static func clearCookies()
  public static func getThemeList() -> [Any]
  public static func setTheme(themeName: Swift.String)
  public static func reformCss(dict: [Swift.String : [Swift.String : Any]], styles: inout [Swift.String : [Swift.String : Swift.String]], prefix: Swift.String)
  public static func getDeviceId() -> Swift.String
  public static func getRegionList() -> [Swift.String]
  public static func setRegion(regionName: Swift.String)
  public static func getCurrentRegion() -> Swift.String
  public static func getFormattingDefinitonByCurrentRegion() -> Foundation.NSDictionary
  public struct ILocationPosition {
  }
  public struct ILocationPositionSuccess {
  }
  public struct ILocationPositionError {
  }
  public struct ILocationCoordinates {
  }
  public static func getUserLocation(successCallBack: JavaScriptCore.JSValue, errorCallBack: JavaScriptCore.JSValue, context: JavaScriptCore.JSContext) -> PlateauMobile.BridgeHelper.ILocationPosition
  public static func copyToClipboard(value: Swift.String)
  public static func log_perf(m: Swift.String)
  public static func getDeepLinkParameters() -> [Swift.String : Swift.String]
  public static func redirect(url: Swift.String)
  public static func parseQueryString(_ queryString: Swift.String) -> [Swift.String : Swift.String]
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VFileInputStyleProps : PlateauMobile.InputBaseStyleProps {
  @objc public var attachBackgroundColor: Swift.String
  @objc public var inputBackgroundColor: Swift.String
  @objc public var activeFontSize: Swift.String
  @objc public var activeFontFamily: Swift.String
  @objc public var activeFontStyle: Swift.String
  @objc public var activeFontColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VFileInputCss : PlateauMobile.InputBaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VFileInputViewModel : PlateauMobile.InputBaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFileInput : PlateauMobile.InputBase, UIKit.UIImagePickerControllerDelegate & UIKit.UINavigationControllerDelegate, UIKit.UIDocumentPickerDelegate, Mantis.CropViewControllerDelegate {
  @objc @_Concurrency.MainActor(unsafe) public func clicked(_ sender: UIKit.UITapGestureRecognizer)
  @objc deinit
  @objc @_Concurrency.MainActor(unsafe) public func browse()
  @_Concurrency.MainActor(unsafe) @objc public func documentPicker(_ controller: UIKit.UIDocumentPickerViewController, didPickDocumentsAt urls: [Foundation.URL])
  @_Concurrency.MainActor(unsafe) @objc public func documentPickerWasCancelled(_ controller: UIKit.UIDocumentPickerViewController)
  @_Concurrency.MainActor(unsafe) @objc public func imagePickerController(_ picker: UIKit.UIImagePickerController, didFinishPickingMediaWithInfo info: [UIKit.UIImagePickerController.InfoKey : Any])
  @_Concurrency.MainActor(unsafe) public func cropViewControllerDidCrop(_ cropViewController: Mantis.CropViewController, cropped: UIKit.UIImage, transformation: Mantis.Transformation, cropInfo: Mantis.CropInfo)
  @objc @_Concurrency.MainActor(unsafe) public func cropViewControllerDidCancel(_ cropViewController: Mantis.CropViewController, original: UIKit.UIImage)
  @_Concurrency.MainActor(unsafe) @objc override public func setFonts()
  @_Concurrency.MainActor(unsafe) @objc override public func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) @objc override public func onRuntimePermissionGranted(grantedPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc override public func onRuntimePermissionDenied(deniedPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc override public func onNeverAskAgainRuntimePermission(neverAskPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc override public func setCorners()
  @_Concurrency.MainActor(unsafe) @objc override public func setBorders()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VBtnToggleCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers final public class VBtnToggleViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) final public class VBtnToggle : PlateauMobile.BaseComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.VBtnToggle : PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) final public func initialize()
  @_Concurrency.MainActor(unsafe) final public func initializeUI()
  @_Concurrency.MainActor(unsafe) final public func initializeBindings()
  @_Concurrency.MainActor(unsafe) final public func initializeStyle()
}
extension UIKit.UIView {
  @_Concurrency.MainActor(unsafe) public func setHidden(_ hidden: Swift.Bool)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class QuickAlert : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) public static let shared: PlateauMobile.QuickAlert
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) public func show(title: Swift.String, text: Swift.String, category: Swift.String, buttons: [Any], completion: ((_ index: Swift.Int) -> Swift.Void)? = nil)
  @_Concurrency.MainActor(unsafe) public func updateFrame()
  @_Concurrency.MainActor(unsafe) public func updateQjsonAlertFrame()
  @_Concurrency.MainActor(unsafe) public func showQjsonAlert(elements: [Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VListCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VListStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VListViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VAlertCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VAlertViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VAlertStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var iconColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VAlert : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor(unsafe) override public func applyBackgroundColorForStyles()
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) public func addSlot()
  @objc deinit
}
public struct PageControlAppearance {
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class PageControl : UIKit.UIStackView {
  @_Concurrency.MainActor(unsafe) public var appearance: PlateauMobile.PageControlAppearance {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func awakeFromNib()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VContainerCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VContainerViewModel : PlateauMobile.BaseViewModel {
  @objc public var id: Swift.String
  @objc public var tag: Swift.String
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VContainerStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VContainer : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VParallaxCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VParallaxViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VExpansionPanelHeaderCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VExpansionPanelHeaderStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var borderColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VExpansionPanelHeaderViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VProgressCircularCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VProgressCircularViewModel : PlateauMobile.BaseViewModel {
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VProgressCircular : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.VProgressCircular {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers open class TrackLayer : QuartzCore.CAShapeLayer {
  public var size: CoreFoundation.CGFloat {
    get
    set
  }
  public var width: CoreFoundation.CGFloat {
    get
    set
  }
  public var color: UIKit.UIColor {
    get
    set
  }
  convenience public init(size: CoreFoundation.CGFloat, width: CoreFoundation.CGFloat, color: UIKit.UIColor)
  public func updateFrame()
  public func updatePath()
  @objc override dynamic public init()
  @objc override dynamic public init(layer: Any)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers open class CircularLayer : QuartzCore.CAShapeLayer {
  public var color: UIKit.UIColor {
    get
    set
  }
  public var indeterminate: Swift.Bool {
    get
    set
  }
  public var rotate: CoreFoundation.CGFloat {
    get
    set
  }
  public var value: CoreFoundation.CGFloat {
    get
    set
  }
  public var size: CoreFoundation.CGFloat {
    get
    set
  }
  public var width: CoreFoundation.CGFloat {
    get
    set
  }
  convenience public init(color: UIKit.UIColor, indeterminate: Swift.Bool, rotate: CoreFoundation.CGFloat, value: CoreFoundation.CGFloat, size: CoreFoundation.CGFloat, width: CoreFoundation.CGFloat)
  public func updateFrame()
  public func updatePath()
  @objc override dynamic public init()
  @objc override dynamic public init(layer: Any)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension PlateauMobile.CircularLayer : QuartzCore.CAAnimationDelegate {
  @objc dynamic public func animationDidStop(_ anim: QuartzCore.CAAnimation, finished flag: Swift.Bool)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VSwitchCss : PlateauMobile.SCInputsCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VSwitchStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var activeBackgorundColor: Swift.String
  @objc public var defaultBackgroundColor: Swift.String
  @objc public var defaultSwitchColor: Swift.String
  @objc public var activeSwitchColor: Swift.String
  @objc public var defaultFontColor: Swift.String
  @objc public var defaultFontFamily: Swift.String
  @objc public var defaultFontStyle: Swift.String
  @objc public var defaultFontSize: Swift.String
  @objc public var defaultFontWeight: Swift.Int
  @objc public var defaultCombinedFont: Swift.String
  @objc public var activeFontFamily: Swift.String
  @objc public var activeFontColor: Swift.String
  @objc public var activeFontSize: Swift.String
  @objc public var activeFontStyle: Swift.String
  @objc public var activeFontWeight: Swift.Int
  @objc public var activeCombinedFont: Swift.String
  @objc public var outerBorderTopStyle: Swift.String
  @objc public var outerBorderRightStyle: Swift.String
  @objc public var outerBorderBottomStyle: Swift.String
  @objc public var outerBorderLeftStyle: Swift.String
  @objc public var outerBorderTopLeftRadius: Swift.String
  @objc public var outerBorderTopRightRadius: Swift.String
  @objc public var outerBorderBottomLeftRadius: Swift.String
  @objc public var outerBorderBottomRightRadius: Swift.String
  @objc public var outerBorderTopWidth: Swift.String
  @objc public var outerBorderRightWidth: Swift.String
  @objc public var outerBorderLeftWidth: Swift.String
  @objc public var outerBorderBottomWidth: Swift.String
  @objc public var outerDefaultBorderColor: Swift.String
  @objc public var hintFontColor: Swift.String
  @objc public var hintFontFamily: Swift.String
  @objc public var hintFontStyle: Swift.String
  @objc public var hintFontSize: Swift.String
  @objc public var hintFontWeight: Swift.Int
  @objc public var hintCombinedFont: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VSwitchViewModel : PlateauMobile.SCInputsViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VSwitch : PlateauMobile.SCInputs {
  @_Concurrency.MainActor(unsafe) override public func applyUIUpdates()
  @_Concurrency.MainActor(unsafe) override public func setCorners()
  @_Concurrency.MainActor(unsafe) override public func setBorders()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) public func switchStyleUpdate(switchButton: UIKit.UISwitch!, switchLabel: UIKit.UILabel!)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxHeaderFilterCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxHeaderFilterViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxHeaderFilter : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) public func showMenu(column key: Swift.String, view: UIKit.UIView)
  @_Concurrency.MainActor(unsafe) public func hideMenu()
  @_Concurrency.MainActor(unsafe) public func getFilter() -> [Swift.Int]
  @_Concurrency.MainActor(unsafe) public func resetFilters()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@_hasMissingDesignatedInitializers open class QJsonHelper {
  public static func extraxtCJson(jsonString: Swift.String) -> Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VListGroupCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VListGroupStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var fontStyle: Swift.String
  @objc public var fontFamily: Swift.String
  @objc public var fontSize: Swift.String
  @objc public var fontWeight: Swift.Int
  @objc public var fontColor: Swift.String
  @objc public var combinedFont: Swift.String
  @objc public var headerBackgroundColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VListGroupViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VSelectCss : PlateauMobile.InputBaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VSelectStyleProps : PlateauMobile.InputBaseStyleProps {
  @objc public var menuBackgroundColor: Swift.String
  @objc public var defaultColor: Swift.String
  @objc public var activeColor: Swift.String
  @objc public var defaultBorderSize: Swift.String
  @objc public var outerBorderColor: Swift.String
  @objc public var dividerBottomColor: Swift.String
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers public class VSelectItem : ObjectiveC.NSObject {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VSelectViewModel : PlateauMobile.InputBaseViewModel {
  @objc public var selectedItems: [PlateauMobile.VSelectItem]
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VSelect : PlateauMobile.InputBase {
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc public func onValidateCheck(validationResult: [Swift.String : Any])
  @_Concurrency.MainActor(unsafe) @objc override public func onPostRender()
  @objc @_Concurrency.MainActor(unsafe) public func setupViewModelProperties()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @_Concurrency.MainActor(unsafe) @objc override public func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) @objc override public func setFonts()
  @_Concurrency.MainActor(unsafe) @objc override public func setShadows()
  @_Concurrency.MainActor(unsafe) @objc override public func outlineViewMask()
  @_Concurrency.MainActor(unsafe) @objc override public func setCorners()
  @objc @_Concurrency.MainActor(unsafe) public func clicked(_ sender: UIKit.UITapGestureRecognizer)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.VSelect : UIKit.UIPopoverPresentationControllerDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func adaptivePresentationStyle(for controller: UIKit.UIPresentationController) -> UIKit.UIModalPresentationStyle
  @_Concurrency.MainActor(unsafe) @objc dynamic public func adaptivePresentationStyle(for controller: UIKit.UIPresentationController, traitCollection: UIKit.UITraitCollection) -> UIKit.UIModalPresentationStyle
}
@objc @_inheritsConvenienceInitializers public class DxExportCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class DxExportViewModel : PlateauMobile.BaseViewModel {
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class DxExport : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) public func showMenu()
  @objc @_Concurrency.MainActor(unsafe) public func hideMenu()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VCardCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VCardViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VCardStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var defaultBorderSize: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class VCard : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, UIKit.UIScrollViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxSelectionCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxSelectionViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxSelection : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.DxSelection {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
extension PlateauMobile.DxSelection {
  @_Concurrency.MainActor(unsafe) public func isSelectColumnShowing() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func onSelectAll()
  @_Concurrency.MainActor(unsafe) public func onRowSelect(index: Swift.Int)
  @_Concurrency.MainActor(unsafe) public func showSelectAllCheckBox() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func showRowCheckBox(index: Swift.Int) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func onLongPressed()
  @_Concurrency.MainActor(unsafe) public func isAllSelected() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getSelectedBackgroundColor() -> UIKit.UIColor
  @_Concurrency.MainActor(unsafe) public func isOnlyPage() -> Swift.Bool
}
@objc @_inheritsConvenienceInitializers public class DxSortingCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxSortingViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class DxSorting : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) public func canSort() -> Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) public func isMultiSort() -> Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) public func showSortIndexes() -> Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) public func showMenu(column key: Swift.String, view: UIKit.UIView)
  @objc @_Concurrency.MainActor(unsafe) public func hideMenu()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VExpansionPanelsCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VExpansionPanelsStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var activePanelLabelFontColor: Swift.String
  @objc public var activePanelLabelFontFamily: Swift.String
  @objc public var activePanelLabelFontSize: Swift.String
  @objc public var activePanelLabelFontStyle: Swift.String
  @objc public var activePanelCombinedFont: Swift.String
  @objc public var inactivePanelLabelFontColor: Swift.String
  @objc public var inactivePanelLabelFontFamily: Swift.String
  @objc public var inactivePanelLabelFontSize: Swift.String
  @objc public var inactivePanelLabelFontStyle: Swift.String
  @objc public var inactivePanelCombinedFont: Swift.String
  @objc public var panelBackgroundColor: Swift.String
  @objc public var inactivePanelHeaderBackgroundColor: Swift.String
  @objc public var inactivePanelHeaderIconColor: Swift.String
  @objc public var activePanelHeaderBackgroundColor: Swift.String
  @objc public var activePanelHeaderIconColor: Swift.String
  @objc public var panelContentBackgroundColor: Swift.String
  @objc public var panelBoxShadow: Swift.String
  @objc public var panelHeaderBoxShadow: Swift.String
  @objc public var panelContentBoxShadow: Swift.String
  @objc public var panelBoxSizing: Swift.String
  @objc public var panelBorderTopStyle: Swift.String
  @objc public var panelBorderRightStyle: Swift.String
  @objc public var panelBorderBottomStyle: Swift.String
  @objc public var panelBorderLeftStyle: Swift.String
  @objc public var panelBorderTopLeftRadius: Swift.String
  @objc public var panelBorderTopRightRadius: Swift.String
  @objc public var panelBorderBottomLeftRadius: Swift.String
  @objc public var panelBorderBottomRightRadius: Swift.String
  @objc public var panelBorderTopWidth: Swift.String
  @objc public var panelBorderRightWidth: Swift.String
  @objc public var panelBorderBottomWidth: Swift.String
  @objc public var panelBorderLeftWidth: Swift.String
  @objc public var panelBorderColor: Swift.String
  @objc public var panelHeaderBoxSizing: Swift.String
  @objc public var panelHeaderBorderTopStyle: Swift.String
  @objc public var panelHeaderBorderRightStyle: Swift.String
  @objc public var panelHeaderBorderBottomStyle: Swift.String
  @objc public var panelHeaderBorderLeftStyle: Swift.String
  @objc public var panelHeaderBorderTopLeftRadius: Swift.String
  @objc public var panelHeaderBorderTopRightRadius: Swift.String
  @objc public var panelHeaderBorderBottomLeftRadius: Swift.String
  @objc public var panelHeaderBorderBottomRightRadius: Swift.String
  @objc public var panelHeaderBorderTopWidth: Swift.String
  @objc public var panelHeaderBorderRightWidth: Swift.String
  @objc public var panelHeaderBorderBottomWidth: Swift.String
  @objc public var panelHeaderBorderLeftWidth: Swift.String
  @objc public var panelHeaderBorderColor: Swift.String
  @objc public var panelContentBoxSizing: Swift.String
  @objc public var panelContentBorderTopStyle: Swift.String
  @objc public var panelContentBorderRightStyle: Swift.String
  @objc public var panelContentBorderBottomStyle: Swift.String
  @objc public var panelContentBorderLeftStyle: Swift.String
  @objc public var panelContentBorderTopLeftRadius: Swift.String
  @objc public var panelContentBorderTopRightRadius: Swift.String
  @objc public var panelContentBorderBottomLeftRadius: Swift.String
  @objc public var panelContentBorderBottomRightRadius: Swift.String
  @objc public var panelContentBorderTopWidth: Swift.String
  @objc public var panelContentBorderRightWidth: Swift.String
  @objc public var panelContentBorderBottomWidth: Swift.String
  @objc public var panelContentBorderLeftWidth: Swift.String
  @objc public var panelContentBorderColor: Swift.String
  @objc public var activePanelLabelFontWeight: Swift.Int
  @objc public var inactivePanelLabelFontWeight: Swift.Int
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VExpansionPanelsViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class QMButtonCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class QMButtonViewModel : PlateauMobile.BaseViewModel {
  @objc public var title: Swift.String
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class QMButton : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @objc @IBOutlet @_Concurrency.MainActor(unsafe) weak public var button: UIKit.UIButton!
  @_Concurrency.MainActor(unsafe) public var view: UIKit.UIView?
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) public func setiTitle(title: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers open class BaseCss : ObjectiveC.NSObject {
  @objc public var height: Swift.String
  @objc public var width: Swift.String
  @objc public var max_height: Swift.String
  @objc public var max_width: Swift.String
  @objc public var min_height: Swift.String
  @objc public var min_width: Swift.String
  @objc public var margin: Swift.String
  @objc public var margin_left: Swift.String
  @objc public var margin_right: Swift.String
  @objc public var margin_top: Swift.String
  @objc public var margin_bottom: Swift.String
  @objc public var padding: Swift.String
  @objc public var padding_left: Swift.String
  @objc public var padding_right: Swift.String
  @objc public var padding_top: Swift.String
  @objc public var padding_bottom: Swift.String
  @objc public var display: Swift.String
  @objc public var flex: Swift.String
  @objc public var flex_direction: Swift.String
  @objc public var flex_grow: Swift.String
  @objc public var flex_shrink: Swift.String
  @objc public var flex_basis: Swift.String
  @objc public var flex_wrap: Swift.String
  @objc public var justify_content: Swift.String
  @objc public var align_items: Swift.String
  @objc public var align_content: Swift.String
  @objc public var align_self: Swift.String
  @objc public var background_color: Swift.String
  @objc public var border_width: Swift.String
  @objc public var border_style: Swift.String
  @objc public var border_color: Swift.String
  @objc public var border_left: Swift.String
  @objc public var border_radius: Swift.String
  @objc public var box_shadow: Swift.String
  @objc public var opacity: Swift.String
  @objc public var background_image: Swift.String
  @objc public var border: Swift.String
  @objc public var background: Swift.String
  @objc public var transition: Swift.String
  @objc public var bottom: Swift.String
  @objc public var top: Swift.String
  @objc public var left: Swift.String
  @objc public var right: Swift.String
  @objc override required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VListItemAvatarCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VListItemAvatarViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@_hasMissingDesignatedInitializers open class SwKeyStore {
  public enum SecError : Darwin.OSStatus, Swift.Error {
    case unimplemented
    case param
    case allocate
    case notAvailable
    case authFailed
    case duplicateItem
    case itemNotFound
    case interactionNotAllowed
    case decode
    case missingEntitlement
    public static var debugLevel: Swift.Int
    public init?(rawValue: Darwin.OSStatus)
    public typealias RawValue = Darwin.OSStatus
    public var rawValue: Darwin.OSStatus {
      get
    }
  }
  public static func upsertKey(_ pemKey: Swift.String, keyTag: Swift.String, options: [Foundation.NSString : Swift.AnyObject] = [:]) throws
  public static func getKey(_ keyTag: Swift.String) throws -> Swift.String
  public static func delKey(_ keyTag: Swift.String) throws
  @objc deinit
}
@_hasMissingDesignatedInitializers open class SwKeyConvert {
  public enum SwError : Swift.Error {
    case invalidKey
    case badPassphrase
    case keyNotEncrypted
    public static var debugLevel: Swift.Int
    public static func == (a: PlateauMobile.SwKeyConvert.SwError, b: PlateauMobile.SwKeyConvert.SwError) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
  @_hasMissingDesignatedInitializers open class PrivateKey {
    public static func pemToPKCS1DER(_ pemKey: Swift.String) throws -> Foundation.Data
    public static func derToPKCS1PEM(_ derKey: Foundation.Data) -> Swift.String
    public typealias EncMode = PlateauMobile.PEM.EncryptedPrivateKey.EncMode
    public static func encryptPEM(_ pemKey: Swift.String, passphrase: Swift.String, mode: PlateauMobile.SwKeyConvert.PrivateKey.EncMode) throws -> Swift.String
    public static func decryptPEM(_ pemKey: Swift.String, passphrase: Swift.String) throws -> Swift.String
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class PublicKey {
    public static func pemToPKCS1DER(_ pemKey: Swift.String) throws -> Foundation.Data
    public static func derToPKCS1PEM(_ derKey: Foundation.Data) -> Swift.String
    public static func derToPKCS8PEM(_ derKey: Foundation.Data) -> Swift.String
    @objc deinit
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers open class PKCS8 {
  @_hasMissingDesignatedInitializers open class PrivateKey {
    public static func getPKCS1DEROffset(_ derKey: Foundation.Data) -> Swift.Int?
    public static func stripHeaderIfAny(_ derKey: Foundation.Data) -> Foundation.Data?
    public static func hasCorrectHeader(_ derKey: Foundation.Data) -> Swift.Bool
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class PublicKey {
    public static func addHeader(_ derKey: Foundation.Data) -> Foundation.Data
    public static func getPKCS1DEROffset(_ derKey: Foundation.Data) -> Swift.Int?
    public static func stripHeaderIfAny(_ derKey: Foundation.Data) -> Foundation.Data?
    public static func hasCorrectHeader(_ derKey: Foundation.Data) -> Swift.Bool
    @objc deinit
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers open class PEM {
  public enum SwError : Swift.Error {
    case parse(Swift.String)
    case badPassphrase
    case keyNotEncrypted
    public static var debugLevel: Swift.Int
  }
  @_hasMissingDesignatedInitializers open class PrivateKey {
    public static func toDER(_ pemKey: Swift.String) throws -> Foundation.Data
    public static func toPEM(_ derKey: Foundation.Data) -> Swift.String
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class PublicKey {
    public static func toDER(_ pemKey: Swift.String) throws -> Foundation.Data
    public static func toPEM(_ derKey: Foundation.Data) -> Swift.String
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class EncryptedPrivateKey {
    public enum EncMode {
      case aes128CBC, aes256CBC
      public static func == (a: PlateauMobile.PEM.EncryptedPrivateKey.EncMode, b: PlateauMobile.PEM.EncryptedPrivateKey.EncMode) -> Swift.Bool
      public func hash(into hasher: inout Swift.Hasher)
      public var hashValue: Swift.Int {
        get
      }
    }
    public static func toDER(_ pemKey: Swift.String, passphrase: Swift.String) throws -> Foundation.Data
    public static func toPEM(_ derKey: Foundation.Data, passphrase: Swift.String, mode: PlateauMobile.PEM.EncryptedPrivateKey.EncMode) -> Swift.String
    @objc deinit
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers open class CC {
  public typealias CCCryptorStatus = Swift.Int32
  public enum CCError : PlateauMobile.CC.CCCryptorStatus, Swift.Error {
    case paramError
    case bufferTooSmall
    case memoryFailure
    case alignmentError
    case decodeError
    case unimplemented
    case overflow
    case rngFailure
    public static var debugLevel: Swift.Int
    public init?(rawValue: PlateauMobile.CC.CCCryptorStatus)
    public typealias RawValue = PlateauMobile.CC.CCCryptorStatus
    public var rawValue: PlateauMobile.CC.CCCryptorStatus {
      get
    }
  }
  public static func generateRandom(_ size: Swift.Int) -> Foundation.Data
  public typealias CCDigestAlgorithm = Swift.UInt32
  public enum DigestAlgorithm : PlateauMobile.CC.CCDigestAlgorithm {
    case none
    case md5
    case rmd128, rmd160, rmd256, rmd320
    case sha1
    case sha224, sha256, sha384, sha512
    public init?(rawValue: PlateauMobile.CC.CCDigestAlgorithm)
    public typealias RawValue = PlateauMobile.CC.CCDigestAlgorithm
    public var rawValue: PlateauMobile.CC.CCDigestAlgorithm {
      get
    }
  }
  public static func digest(_ data: Foundation.Data, alg: PlateauMobile.CC.DigestAlgorithm) -> Foundation.Data
  public typealias CCHmacAlgorithm = Swift.UInt32
  public enum HMACAlg : PlateauMobile.CC.CCHmacAlgorithm {
    case sha1, md5, sha256, sha384, sha512, sha224
    public init?(rawValue: PlateauMobile.CC.CCHmacAlgorithm)
    public typealias RawValue = PlateauMobile.CC.CCHmacAlgorithm
    public var rawValue: PlateauMobile.CC.CCHmacAlgorithm {
      get
    }
  }
  public static func HMAC(_ data: Foundation.Data, alg: PlateauMobile.CC.HMACAlg, key: Foundation.Data) -> Foundation.Data
  public typealias CCOperation = Swift.UInt32
  public enum OpMode : PlateauMobile.CC.CCOperation {
    case encrypt, decrypt
    public init?(rawValue: PlateauMobile.CC.CCOperation)
    public typealias RawValue = PlateauMobile.CC.CCOperation
    public var rawValue: PlateauMobile.CC.CCOperation {
      get
    }
  }
  public typealias CCMode = Swift.UInt32
  public enum BlockMode : PlateauMobile.CC.CCMode {
    case ecb, cbc, cfb, ctr, f8, lrw, ofb, xts, rc4, cfb8
    public init?(rawValue: PlateauMobile.CC.CCMode)
    public typealias RawValue = PlateauMobile.CC.CCMode
    public var rawValue: PlateauMobile.CC.CCMode {
      get
    }
  }
  public enum AuthBlockMode : PlateauMobile.CC.CCMode {
    case gcm, ccm
    public init?(rawValue: PlateauMobile.CC.CCMode)
    public typealias RawValue = PlateauMobile.CC.CCMode
    public var rawValue: PlateauMobile.CC.CCMode {
      get
    }
  }
  public typealias CCAlgorithm = Swift.UInt32
  public enum Algorithm : PlateauMobile.CC.CCAlgorithm {
    case aes, des, threeDES, cast, rc4, rc2, blowfish
    public init?(rawValue: PlateauMobile.CC.CCAlgorithm)
    public typealias RawValue = PlateauMobile.CC.CCAlgorithm
    public var rawValue: PlateauMobile.CC.CCAlgorithm {
      get
    }
  }
  public typealias CCPadding = Swift.UInt32
  public enum Padding : PlateauMobile.CC.CCPadding {
    case noPadding, pkcs7Padding
    public init?(rawValue: PlateauMobile.CC.CCPadding)
    public typealias RawValue = PlateauMobile.CC.CCPadding
    public var rawValue: PlateauMobile.CC.CCPadding {
      get
    }
  }
  public static func crypt(_ opMode: PlateauMobile.CC.OpMode, blockMode: PlateauMobile.CC.BlockMode, algorithm: PlateauMobile.CC.Algorithm, padding: PlateauMobile.CC.Padding, data: Foundation.Data, key: Foundation.Data, iv: Foundation.Data) throws -> Foundation.Data
  public static func cryptAuth(_ opMode: PlateauMobile.CC.OpMode, blockMode: PlateauMobile.CC.AuthBlockMode, algorithm: PlateauMobile.CC.Algorithm, data: Foundation.Data, aData: Foundation.Data, key: Foundation.Data, iv: Foundation.Data, tagLength: Swift.Int) throws -> Foundation.Data
  public static func digestAvailable() -> Swift.Bool
  public static func randomAvailable() -> Swift.Bool
  public static func hmacAvailable() -> Swift.Bool
  public static func cryptorAvailable() -> Swift.Bool
  public static func available() -> Swift.Bool
  @_hasMissingDesignatedInitializers open class GCM {
    public static func crypt(_ opMode: PlateauMobile.CC.OpMode, algorithm: PlateauMobile.CC.Algorithm, data: Foundation.Data, key: Foundation.Data, iv: Foundation.Data, aData: Foundation.Data, tagLength: Swift.Int) throws -> (Foundation.Data, Foundation.Data)
    public static func available() -> Swift.Bool
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class CCM {
    public static func crypt(_ opMode: PlateauMobile.CC.OpMode, algorithm: PlateauMobile.CC.Algorithm, data: Foundation.Data, key: Foundation.Data, iv: Foundation.Data, aData: Foundation.Data, tagLength: Swift.Int) throws -> (Foundation.Data, Foundation.Data)
    public static func available() -> Swift.Bool
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class RSA {
    public typealias CCAsymmetricPadding = Swift.UInt32
    public enum AsymmetricPadding : PlateauMobile.CC.RSA.CCAsymmetricPadding {
      case pkcs1
      case oaep
      public init?(rawValue: PlateauMobile.CC.RSA.CCAsymmetricPadding)
      public typealias RawValue = PlateauMobile.CC.RSA.CCAsymmetricPadding
      public var rawValue: PlateauMobile.CC.RSA.CCAsymmetricPadding {
        get
      }
    }
    public enum AsymmetricSAPadding : Swift.UInt32 {
      case pkcs15
      case pss
      public init?(rawValue: Swift.UInt32)
      public typealias RawValue = Swift.UInt32
      public var rawValue: Swift.UInt32 {
        get
      }
    }
    public static func generateKeyPair(_ keySize: Swift.Int = 4096) throws -> (Foundation.Data, Foundation.Data)
    public static func encrypt(_ data: Foundation.Data, derKey: Foundation.Data, tag: Foundation.Data, padding: PlateauMobile.CC.RSA.AsymmetricPadding, digest: PlateauMobile.CC.DigestAlgorithm) throws -> Foundation.Data
    public static func decrypt(_ data: Foundation.Data, derKey: Foundation.Data, tag: Foundation.Data, padding: PlateauMobile.CC.RSA.AsymmetricPadding, digest: PlateauMobile.CC.DigestAlgorithm) throws -> (Foundation.Data, Swift.Int)
    public static func sign(_ message: Foundation.Data, derKey: Foundation.Data, padding: PlateauMobile.CC.RSA.AsymmetricSAPadding, digest: PlateauMobile.CC.DigestAlgorithm, saltLen: Swift.Int) throws -> Foundation.Data
    public static func verify(_ message: Foundation.Data, derKey: Foundation.Data, padding: PlateauMobile.CC.RSA.AsymmetricSAPadding, digest: PlateauMobile.CC.DigestAlgorithm, saltLen: Swift.Int, signedData: Foundation.Data) throws -> Swift.Bool
    public static func available() -> Swift.Bool
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class DH {
    public enum DHParam {
      case rfc3526Group5
      public static func == (a: PlateauMobile.CC.DH.DHParam, b: PlateauMobile.CC.DH.DHParam) -> Swift.Bool
      public func hash(into hasher: inout Swift.Hasher)
      public var hashValue: Swift.Int {
        get
      }
    }
    open class DH {
      public init(dhParam: PlateauMobile.CC.DH.DHParam) throws
      open func generateKey() throws -> Foundation.Data
      open func computeKey(_ peerKey: Foundation.Data) throws -> Foundation.Data
      @objc deinit
    }
    public static func available() -> Swift.Bool
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class EC {
    public static func generateKeyPair(_ keySize: Swift.Int) throws -> (Foundation.Data, Foundation.Data)
    public static func signHash(_ privateKey: Foundation.Data, hash: Foundation.Data) throws -> Foundation.Data
    public static func verifyHash(_ publicKey: Foundation.Data, hash: Foundation.Data, signedData: Foundation.Data) throws -> Swift.Bool
    public static func computeSharedSecret(_ privateKey: Foundation.Data, publicKey: Foundation.Data) throws -> Foundation.Data
    public static func available() -> Swift.Bool
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class CRC {
    public typealias CNcrc = Swift.UInt32
    public enum Mode : PlateauMobile.CC.CRC.CNcrc {
      case crc8, crc8ICODE, crc8ITU, crc8ROHC, crc8WCDMA, crc16, crc16CCITTTrue, crc16CCITTFalse, crc16USB, crc16XMODEM, crc16DECTR, crc16DECTX, crc16ICODE, crc16VERIFONE, crc16A, crc16B, crc16Fletcher, crc32Adler, crc32, crc32CASTAGNOLI, crc32BZIP2, crc32MPEG2, crc32POSIX, crc32XFER, crc64ECMA182
      public init?(rawValue: PlateauMobile.CC.CRC.CNcrc)
      public typealias RawValue = PlateauMobile.CC.CRC.CNcrc
      public var rawValue: PlateauMobile.CC.CRC.CNcrc {
        get
      }
    }
    public static func crc(_ input: Foundation.Data, mode: PlateauMobile.CC.CRC.Mode) throws -> Swift.UInt64
    public static func available() -> Swift.Bool
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class CMAC {
    public static func AESCMAC(_ data: Foundation.Data, key: Foundation.Data) -> Foundation.Data
    public static func available() -> Swift.Bool
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class KeyDerivation {
    public typealias CCPseudoRandomAlgorithm = Swift.UInt32
    public enum PRFAlg : PlateauMobile.CC.KeyDerivation.CCPseudoRandomAlgorithm {
      case sha1, sha224, sha256, sha384, sha512
      public init?(rawValue: PlateauMobile.CC.KeyDerivation.CCPseudoRandomAlgorithm)
      public typealias RawValue = PlateauMobile.CC.KeyDerivation.CCPseudoRandomAlgorithm
      public var rawValue: PlateauMobile.CC.KeyDerivation.CCPseudoRandomAlgorithm {
        get
      }
    }
    public static func PBKDF2(_ password: Swift.String, salt: Foundation.Data, prf: PlateauMobile.CC.KeyDerivation.PRFAlg, rounds: Swift.UInt32) throws -> Foundation.Data
    public static func available() -> Swift.Bool
    @objc deinit
  }
  @_hasMissingDesignatedInitializers open class KeyWrap {
    public static let rfc3394IV: Foundation.Data
    public static func SymmetricKeyWrap(_ iv: Foundation.Data, kek: Foundation.Data, rawKey: Foundation.Data) throws -> Foundation.Data
    public static func SymmetricKeyUnwrap(_ iv: Foundation.Data, kek: Foundation.Data, wrappedKey: Foundation.Data) throws -> Foundation.Data
    public static func available() -> Swift.Bool
    @objc deinit
  }
  @objc deinit
}
extension Foundation.Data {
  public func hexadecimalString() -> Swift.String
  public func arrayOfBytes() -> [Swift.UInt8]
}
extension Swift.String {
  public func dataFromHexadecimalString() -> Foundation.Data?
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VTabsCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTabsViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTabsStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var defaultColor: Swift.String
  @objc public var activeTabBoxShadow: Swift.String
  @objc public var activeTabBorderTopLeftRadius: Swift.String
  @objc public var activeTabBorderTopRightRadius: Swift.String
  @objc public var activeTabBorderBottomLeftRadius: Swift.String
  @objc public var activeTabBorderBottomRightRadius: Swift.String
  @objc public var tabsBarBoxShadow: Swift.String
  @objc public var tabsBarSliderColor: Swift.String
  @objc public var tabsBarBackgroundColor: Swift.String
  @objc public var activeTabBackgroundColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VTabs : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor(unsafe) public func makeActiveInactiveStyles()
  @_Concurrency.MainActor(unsafe) public func fixTabs()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @_Concurrency.MainActor(unsafe) override public func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) override public func setShadows()
  @objc deinit
}
extension PlateauMobile.VTabs {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class DErrorCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class DErrorViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class DError : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxDataGridCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxDataGridViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxDataGrid : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override public func setupScopedSlotUI()
  @_Concurrency.MainActor(unsafe) @objc override public func setupScopedSlots()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.DxDataGrid {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
extension PlateauMobile.DxDataGrid : PlateauMobile.DxProtocol {
  @_Concurrency.MainActor(unsafe) public var numberOfVisibleColumns: Swift.Int {
    get
  }
  @_Concurrency.MainActor(unsafe) public var pageIndicies: (Swift.Int, Swift.Int) {
    get
  }
  @_Concurrency.MainActor(unsafe) public func updatePage(page: Swift.Int)
  @_Concurrency.MainActor(unsafe) public func updatePageSize(size: Swift.Int, onPageChange: (Swift.Int) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) public var numberOfPages: Swift.Int {
    get
  }
  @_Concurrency.MainActor(unsafe) public var totalItems: Swift.Int {
    get
  }
  @_Concurrency.MainActor(unsafe) public var dataSource: [Swift.Dictionary<Swift.String, Any>] {
    get
  }
  @_Concurrency.MainActor(unsafe) public var getDataContainer: UIKit.UIView {
    get
  }
  @_Concurrency.MainActor(unsafe) public var getRows: [PlateauMobile.DxRowView] {
    get
  }
  @_Concurrency.MainActor(unsafe) public var dataGrid: PlateauMobile.DxDataGrid {
    get
  }
  @_Concurrency.MainActor(unsafe) public var filteredRows: [Swift.Int] {
    get
  }
  @_Concurrency.MainActor(unsafe) public func updateDataSource(dataSource: [Swift.Dictionary<Swift.String, Any>])
  @_Concurrency.MainActor(unsafe) public func sortColumn(column key: Swift.String, order: Foundation.ComparisonResult)
  @_Concurrency.MainActor(unsafe) public func filterRows(column key: Swift.String, value: Swift.String, type: PlateauMobile.OperationType = .reset)
  @_Concurrency.MainActor(unsafe) public func getColumnType(column key: Swift.String) -> PlateauMobile.DataType
  @_Concurrency.MainActor(unsafe) public func setFilter()
  @_Concurrency.MainActor(unsafe) public func replaceDraggingRow(view: PlateauMobile.DxRowView, newView: UIKit.UIView?)
  @_Concurrency.MainActor(unsafe) public func getState() -> PlateauMobile.GridState
  @_Concurrency.MainActor(unsafe) public func setState(state: PlateauMobile.GridState)
  @_Concurrency.MainActor(unsafe) public func allowExporting(column key: Swift.String) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func allowFiltering(column key: Swift.String) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func allowFixing(column key: Swift.String) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func allowSorting(column key: Swift.String) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func allowSearch(column key: Swift.String) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func updateDataTypes()
  @_Concurrency.MainActor(unsafe) public func filterOperations(column key: Swift.String) -> [Swift.String]?
  @_Concurrency.MainActor(unsafe) public func isFilterTypeExculude(column key: Swift.String) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getSelectedFilterOperation(column key: Swift.String) -> Swift.String?
  @_Concurrency.MainActor(unsafe) public func setSelectedFilterOperation(column key: Swift.String, operation: Swift.String)
  @_Concurrency.MainActor(unsafe) public func sort(reload: Swift.Bool = true)
  @_Concurrency.MainActor(unsafe) public func changeColumnVisibility(column key: Swift.String, show: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public func getLocale() -> Foundation.Locale
  @_Concurrency.MainActor(unsafe) public func onColumnChooserDragBegin(view: UIKit.UIView, column key: Swift.String, gesture: UIKit.UIPanGestureRecognizer)
  @_Concurrency.MainActor(unsafe) public func onColumnChooserDragEnd(column key: Swift.String, gesture: UIKit.UIPanGestureRecognizer)
  @_Concurrency.MainActor(unsafe) public func onColumnChooserDrag(column key: Swift.String, gesture: UIKit.UIPanGestureRecognizer)
}
extension PlateauMobile.DxDataGrid {
  @_Concurrency.MainActor(unsafe) public var getColumns: [PlateauMobile.Column] {
    get
  }
  @_Concurrency.MainActor(unsafe) public var showColumnSeperator: Swift.Bool {
    get
  }
  @_Concurrency.MainActor(unsafe) public var showSelectColumn: Swift.Bool {
    get
  }
  @_Concurrency.MainActor(unsafe) public var showDragColumn: Swift.Bool {
    get
  }
  @_Concurrency.MainActor(unsafe) public func allowHiding(column key: Swift.String) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func applyLayout(preservingOrigin: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public func reload()
}
extension PlateauMobile.DxDataGrid {
  @_Concurrency.MainActor(unsafe) public func cellValue(_ rowIndex: Swift.Int, _ dataField: Swift.String) -> Any?
  @_Concurrency.MainActor(unsafe) public func cellValue(_ rowIndex: Swift.Int, _ dataField: Swift.String, _ value: Any)
  @_Concurrency.MainActor(unsafe) public func cellValue(_ rowIndex: Swift.Int, _ visibleColumnIndex: Swift.Int) -> Any?
  @_Concurrency.MainActor(unsafe) public func cellValue(_ rowIndex: Swift.Int, _ visibleColumnIndex: Swift.Int, _ value: Any)
  @_Concurrency.MainActor(unsafe) public func clearFilter()
  @_Concurrency.MainActor(unsafe) public func clearFilter(_ filterName: Swift.String)
  @_Concurrency.MainActor(unsafe) public func clearSelection()
  @_Concurrency.MainActor(unsafe) public func clearSorting()
  @_Concurrency.MainActor(unsafe) public func columnCount() -> Swift.Int
  @_Concurrency.MainActor(unsafe) public func deleteColumn(_ id: Any)
  @_Concurrency.MainActor(unsafe) public func deleteRow(_ rowIndex: Swift.Int)
  @_Concurrency.MainActor(unsafe) public func deselectAll()
  @_Concurrency.MainActor(unsafe) public func endUpdate()
  @_Concurrency.MainActor(unsafe) public func getCellElement(_ rowIndex: Swift.Int, _ dataField: Swift.String) -> UIKit.UIView?
  @_Concurrency.MainActor(unsafe) public func getCellElement(_ rowIndex: Swift.Int, _ visibleColumnIndex: Swift.Int) -> UIKit.UIView?
  @_Concurrency.MainActor(unsafe) public func getDataSource() -> [Swift.Dictionary<Swift.String, Any>]
  @_Concurrency.MainActor(unsafe) public func getRowElement(_ rowIndex: Swift.Int) -> PlateauMobile.DxRowView?
  @_Concurrency.MainActor(unsafe) public func getSelectedRowsData() -> [Swift.Dictionary<Swift.String, Any>]
  @_Concurrency.MainActor(unsafe) public func getVisibleColumnIndex(_ id: Any) -> Swift.Int?
  @_Concurrency.MainActor(unsafe) public func getVisibleRows() -> [Swift.Dictionary<Swift.String, Any>]
  @_Concurrency.MainActor(unsafe) public func hideColumnChooser()
  @_Concurrency.MainActor(unsafe) public func option() -> PlateauMobile.DxDataGridViewModel
  @_Concurrency.MainActor(unsafe) public func option(_ optionName: Swift.String) -> Any?
  @_Concurrency.MainActor(unsafe) public func option(_ optionName: Swift.String, _ optionValue: Any?)
  @_Concurrency.MainActor(unsafe) public func pageCount() -> Swift.Int
  @_Concurrency.MainActor(unsafe) public func pageIndex() -> Swift.Int
  @_Concurrency.MainActor(unsafe) public func pageIndex(_ newIndex: Swift.Int)
  @_Concurrency.MainActor(unsafe) public func pageSize() -> Swift.Int
  @_Concurrency.MainActor(unsafe) public func pageSize(_ value: Swift.Int)
  @_Concurrency.MainActor(unsafe) public func refresh()
  @_Concurrency.MainActor(unsafe) public func resetOption(_ optionName: Swift.String)
  @_Concurrency.MainActor(unsafe) public func searchByText(_ text: Swift.String)
  @_Concurrency.MainActor(unsafe) public func selectAll()
  @_Concurrency.MainActor(unsafe) public func selectRowsByIndexes(indexes: [Swift.Int])
  @_Concurrency.MainActor(unsafe) public func showColumnChooser()
  @_Concurrency.MainActor(unsafe) public func state() -> PlateauMobile.GridState
  @_Concurrency.MainActor(unsafe) public func state(_ state: PlateauMobile.GridState)
  @_Concurrency.MainActor(unsafe) public func totalCount() -> Swift.Int
}
extension PlateauMobile.DxDataGrid {
  @_Concurrency.MainActor(unsafe) public func horizontalSeperator(_ height: Swift.Float) -> UIKit.UIView
  @_Concurrency.MainActor(unsafe) public func verticalSeperator() -> UIKit.UIView
  @_Concurrency.MainActor(unsafe) public func horizontalSeperator() -> UIKit.UIView
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QBNetworkManager : ObjectiveC.NSObject {
  public class func shared() -> PlateauMobile.QBNetworkManager
  public enum Error : Swift.Error {
    case connectivity
    case invalidData
    case errorStatus
    public static func == (a: PlateauMobile.QBNetworkManager.Error, b: PlateauMobile.QBNetworkManager.Error) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
  public func sendRequestFrom(url: Swift.String, parameters: [Swift.String : Swift.String], body: [Swift.String : Any], method: PlateauMobile.HTTPMethodType, transformReponse: Swift.Bool, headers: PlateauMobile.QHTTPHeaders, completion: @escaping (_ json: Any?, _ error: Foundation.NSError?) -> Swift.Void)
  public func logJson(dict: Foundation.NSDictionary)
  @objc deinit
}
public struct CalendarPickerAppearance {
  public init(css: PlateauMobile.VDatePickerCss, vm: PlateauMobile.VDatePickerViewModel, styleProps: PlateauMobile.VDatePickerStyleProps)
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) final public class CalendarPicker : UIKit.UIView {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class NotFoundCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class NotFoundViewModel : PlateauMobile.BaseViewModel {
  @objc public var notFoundType: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class NotFound : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) public var totalHeight: Swift.Float
  @_Concurrency.MainActor(unsafe) public var totalWidth: Swift.Float
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) public func onTap(_ sender: UIKit.UITapGestureRecognizer)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VDialogCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VDialogViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VDialogStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VDialog : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override public func onViewDidAppear()
  @_Concurrency.MainActor(unsafe) override public func setShadows()
  @_Concurrency.MainActor(unsafe) override public func setBorders()
  @_Concurrency.MainActor(unsafe) override public func setCorners()
  @_Concurrency.MainActor(unsafe) override public func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) override public func applyMarginsForStyles()
  @_Concurrency.MainActor(unsafe) override public func applyPaddingsForStyles()
  @_Concurrency.MainActor(unsafe) override public func applyResizeForStyles()
  @_Concurrency.MainActor(unsafe) public func reLayout()
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class QMapCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QMapStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QMapViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class QMap : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, MapKit.MKMapViewDelegate, CoreLocation.CLLocationManagerDelegate {
  @objc deinit
  @objc @_Concurrency.MainActor(unsafe) override public func applyUIUpdates()
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) public func getLocation()
  @_Concurrency.MainActor(unsafe) @objc override public func onRuntimePermissionGranted(grantedPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc override public func onRuntimePermissionDenied(deniedPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc override public func onNeverAskAgainRuntimePermission(neverAskPermissions: [Swift.String]?)
  @objc @_Concurrency.MainActor(unsafe) public func getCurrentLocationAddress(pdblLatitude: Swift.String, withLongitude: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) public func clicked(sender: UIKit.UITapGestureRecognizer)
  @_Concurrency.MainActor(unsafe) @objc public func mapView(_ mapView: MapKit.MKMapView, didSelect view: MapKit.MKAnnotationView)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
@objc @_inheritsConvenienceInitializers public class DxPagingCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxPagingViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxPaging : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, UIKit.UIPickerViewDelegate, UIKit.UIPickerViewDataSource {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) public func getPageSize() -> Swift.Int
  @_Concurrency.MainActor(unsafe) public func getPageIndex() -> Swift.Int
  @_Concurrency.MainActor(unsafe) public func setPageSize(_ size: Swift.Int)
  @_Concurrency.MainActor(unsafe) public func setPageIndex(_ index: Swift.Int)
  @objc @_Concurrency.MainActor(unsafe) public func pageClicked(sender: UIKit.UIButton!)
  @objc @_Concurrency.MainActor(unsafe) public func pickerClicked(sender: UIKit.UIButton!)
  @_Concurrency.MainActor(unsafe) @objc public func numberOfComponents(in pickerView: UIKit.UIPickerView) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc public func pickerView(_ pickerView: UIKit.UIPickerView, numberOfRowsInComponent component: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc public func pickerView(_ pickerView: UIKit.UIPickerView, titleForRow row: Swift.Int, forComponent component: Swift.Int) -> Swift.String?
  @_Concurrency.MainActor(unsafe) @objc public func pickerView(_ pickerView: UIKit.UIPickerView, didSelectRow row: Swift.Int, inComponent component: Swift.Int)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VStepperItemsCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VStepperItemsViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VStepperItemsStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VStepperItems : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) override public func applyStyleUpdates()
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.VStepperItems {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class SCInputsCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class SCInputsViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class SCInputs : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) public func addSlot()
  @objc @_Concurrency.MainActor(unsafe) public func onTap(_ sender: UIKit.UITapGestureRecognizer)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VDatePickerCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VDatePickerViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VDatePickerStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var defaultColor: Swift.String
  @objc public var selectedColor: Swift.String
  @objc public var selectedBorderColor: Swift.String
  @objc public var defaultBorderSize: Swift.String
  @objc public var selectedBorderSize: Swift.String
  @objc public var defaultFontFamily: Swift.String
  @objc public var defaultFontColor: Swift.String
  @objc public var defaultFontSize: Swift.String
  @objc public var defaultFontStyle: Swift.String
  @objc public var defaultFontWeight: Swift.Int
  @objc public var selectedFontColor: Swift.String
  @objc public var selectedFontFamily: Swift.String
  @objc public var selectedFontStyle: Swift.String
  @objc public var selectedFontSize: Swift.String
  @objc public var selectedFontWeight: Swift.Int
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VDatePicker : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) override public func applyResizeForStyles()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VBottomNavigationStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VBottomNavigationCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VBottomNavigationViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
public class RenderContext {
  public var components: [Any]
  public var style: Swift.String
  public var theme: Swift.String
  public var viewModel: PlateauMobile.BaseViewModel
  public var styleProps: PlateauMobile.BaseStyleProps
  public var styles: [Swift.String : [Swift.String : Swift.String]]
  public var transitionType: Swift.String
  public var currentView: UIKit.UIView?
  public var mainView: UIKit.UIView?
  public var componentDictDict: [Swift.String : [Swift.String : PlateauMobile.BaseComponent]]
  public var elements: [Any]
  public var themeCsses: [Swift.String]
  public var appview: UIKit.UIView?
  public var fixedChilds: [UIKit.UIView]
  public var absoluteChilds: [UIKit.UIView]
  public var slotsToBeCSSed: [PlateauMobile.BaseComponent]
  public var slotsCSS: [Swift.String : [Swift.String : Swift.String]]
  public var createdCompsToBeCSSed: [PlateauMobile.BaseComponent]
  public var compsTobeRefreshStyle: [PlateauMobile.BaseComponent]
  public var compsToBeCSSed: [PlateauMobile.BaseComponent]
  public var pageId: Swift.String
  public var deepLinkParameters: [Swift.String : Any]
  public var yamlValues: [Swift.String : Any?]
  public var settingsValues: [Swift.String : Any?]
  public var loadingJsonData: Swift.String
  public var pageProporties: [Swift.String : Swift.String]
  public func getCurrentComponentDict() -> [Swift.String : PlateauMobile.BaseComponent]
  public func addToCurrentComponentDict(key: Swift.String, element: PlateauMobile.BaseComponent)
  required public init()
  public func refresh()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VStepperContentCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VStepperContentViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VStepperContentStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VStepperContent : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @objc deinit
  @_Concurrency.MainActor(unsafe) override public func applyStyleUpdates()
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class TimelinePoint : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) public var lineWidth: CoreFoundation.CGFloat {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var itemWidth: Swift.String
  @_Concurrency.MainActor(unsafe) public var itemHeight: Swift.String
  @_Concurrency.MainActor(unsafe) public var innerColor: UIKit.UIColor
  @_Concurrency.MainActor(unsafe) public var outerBorderColor: UIKit.UIColor
  @_Concurrency.MainActor(unsafe) public var outerBorderSize: CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) public var iconName: Swift.String?
  @_Concurrency.MainActor(unsafe) public var iconColor: Swift.String
  @_Concurrency.MainActor(unsafe) public var large: Swift.Bool
  @_Concurrency.MainActor(unsafe) public var small: Swift.Bool
  @_Concurrency.MainActor(unsafe) public var fillDot: Swift.Bool
  @_Concurrency.MainActor(unsafe) public init(innerColor: UIKit.UIColor, outerBorderColor: UIKit.UIColor, outerBorderSize: CoreFoundation.CGFloat, iconName: Swift.String? = nil, large: Swift.Bool = false, small: Swift.Bool = false, hideDot: Swift.Bool = false, fillDot: Swift.Bool = false, iconWidth: Swift.String, iconHeight: Swift.String, iconColor: Swift.String)
  @_Concurrency.MainActor(unsafe) public func draw()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VCarouselItemCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VCarouselItemViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VListItemCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VListItemStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VListItemViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class DxRowView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) open var row: Swift.Int
  @_Concurrency.MainActor(unsafe) public func reload()
  @objc deinit
}
extension PlateauMobile.DxRowView {
  @_Concurrency.MainActor(unsafe) public func getCell(key: Swift.String) -> UIKit.UIView?
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VChipCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VChipStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var contentFontColor: Swift.String
  @objc public var contentFontFamily: Swift.String
  @objc public var contentFontSize: Swift.String
  @objc public var contentFontStyle: Swift.String
  @objc public var contentFontWeight: Swift.Int
  @objc public var activeColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VChipViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VColCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VColViewModel : PlateauMobile.BaseViewModel {
  @objc public var alignSelf: Swift.String
  @objc public var cols: Swift.String
  @objc public var offset: Swift.Int
  @objc public var tag: Swift.String
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VColStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VCol : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) override public func applyStyleUpdates()
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VBadgeCss : PlateauMobile.BaseCss {
  @objc public var color: Swift.String
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VBadgeViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VBadge : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.VBadge {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VExpansionPanelCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VExpansionPanelStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VExpansionPanelViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VChipGroupCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VChipGroupViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VChipGroupStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VChipGroup : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, UIKit.UIScrollViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewDidAppear()
  @_Concurrency.MainActor(unsafe) public func updateScrollViewSize()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class TextInputsCSS : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class CCContainerViewCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class CCContainerViewViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class CCContainerView : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) public func addChild(elements: [Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VAutocompleteCss : PlateauMobile.InputBaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VAutocompleteStyleProps : PlateauMobile.InputBaseStyleProps {
  @objc public var menuFontColor: Swift.String
  @objc public var menuFontFamily: Swift.String
  @objc public var menuFontSize: Swift.String
  @objc public var menuFontStyle: Swift.String
  @objc public var menuFontWeight: Swift.Int
  @objc public var menuCombinedFont: Swift.String
  @objc public var menuBackgroundColor: Swift.String
  @objc public var menuDefaultHoverColor: Swift.String
  @objc public var menuActiveHoverColor: Swift.String
  @objc public var menuBoxShadow: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VAutocompleteViewModel : PlateauMobile.InputBaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VAutocomplete : PlateauMobile.InputBase {
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @_Concurrency.MainActor(unsafe) @objc override public func applyStyleUpdates()
  @_Concurrency.MainActor(unsafe) @objc override public func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewDidAppear()
  @objc @_Concurrency.MainActor(unsafe) public func setStyleFont()
  @objc @_Concurrency.MainActor(unsafe) public func clicked(_ sender: UIKit.UITapGestureRecognizer)
  @_Concurrency.MainActor(unsafe) @objc override public func textFieldDidBeginEditing(_ textField: UIKit.UITextField)
  @_Concurrency.MainActor(unsafe) @objc override public func textFieldDidEndEditing(_ textField: UIKit.UITextField)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
public struct InputsConstant {
}
@objc @_inheritsConvenienceInitializers public class VSnackbarCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VSnackbarViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VSnackbar : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.VSnackbar {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@_hasMissingDesignatedInitializers public class StyleHelper {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class QOtpCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QOtpStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var defaultInputBackgroundColor: Swift.String
  @objc public var selectedInputBackgroundColor: Swift.String
  @objc public var inputBoxShadow: Swift.String
  @objc public var gap: Swift.String
  @objc public var inputBoxSizing: Swift.String
  @objc public var inputBorderTopStyle: Swift.String
  @objc public var inputBorderRightStyle: Swift.String
  @objc public var inputBorderBottomStyle: Swift.String
  @objc public var inputBorderLeftStyle: Swift.String
  @objc public var inputBorderTopLeftRadius: Swift.String
  @objc public var inputBorderTopRightRadius: Swift.String
  @objc public var inputBorderBottomLeftRadius: Swift.String
  @objc public var inputBorderBottomRightRadius: Swift.String
  @objc public var inputBorderTopWidth: Swift.String
  @objc public var inputBorderRightWidth: Swift.String
  @objc public var inputBorderBottomWidth: Swift.String
  @objc public var inputBorderLeftWidth: Swift.String
  @objc public var inputDefaultBorderColor: Swift.String
  @objc public var selectedInputBoxShadow: Swift.String
  @objc public var selectedInputBoxSizing: Swift.String
  @objc public var selectedInputBorderTopStyle: Swift.String
  @objc public var selectedInputBorderRightStyle: Swift.String
  @objc public var selectedInputBorderBottomStyle: Swift.String
  @objc public var selectedInputBorderLeftStyle: Swift.String
  @objc public var selectedInputBorderTopLeftRadius: Swift.String
  @objc public var selectedInputBorderTopRightRadius: Swift.String
  @objc public var selectedInputBorderBottomLeftRadius: Swift.String
  @objc public var selectedInputBorderBottomRightRadius: Swift.String
  @objc public var selectedInputBorderTopWidth: Swift.String
  @objc public var selectedInputBorderRightWidth: Swift.String
  @objc public var selectedInputBorderBottomWidth: Swift.String
  @objc public var selectedInputBorderLeftWidth: Swift.String
  @objc public var selectedInputDefaultBorderColor: Swift.String
  @objc public var combinedFont: Swift.String
  @objc public var inputFontSize: Swift.String
  @objc public var inputFontColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QOtpViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class QOtp : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, UIKit.UITextFieldDelegate {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public var selectedIndex: Swift.Int
  @_Concurrency.MainActor(unsafe) public var shadowFlag: Swift.Bool
  @_Concurrency.MainActor(unsafe) public var cornerFlag: Swift.Bool
  @_Concurrency.MainActor(unsafe) public var borderFlag: Swift.Bool
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) override public func applyResizeForStyles()
  @_Concurrency.MainActor(unsafe) override public func setBorders()
  @_Concurrency.MainActor(unsafe) override public func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) public func setActiveShadowAndBackground()
  @_Concurrency.MainActor(unsafe) public func createOTPView()
  @_Concurrency.MainActor(unsafe) @objc public func textFieldDidEndEditing(_ textField: UIKit.UITextField)
  @_Concurrency.MainActor(unsafe) @objc public func textFieldDidBeginEditing(_ textField: UIKit.UITextField)
  @_Concurrency.MainActor(unsafe) override public func setCorners()
  @_Concurrency.MainActor(unsafe) override public func setShadows()
  @_Concurrency.MainActor(unsafe) @objc public func textField(_ textField: UIKit.UITextField, shouldChangeCharactersIn range: Foundation.NSRange, replacementString string: Swift.String) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VBottomSheetCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VBottomSheetStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VBottomSheetViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VBottomSheet : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc override public func setupScopedSlotUI()
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @_Concurrency.MainActor(unsafe) override public func setShadows()
  @_Concurrency.MainActor(unsafe) override public func setCorners()
  @_Concurrency.MainActor(unsafe) override public func setBorders()
  @_Concurrency.MainActor(unsafe) override public func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) override public func applyResizeForStyles()
  @_Concurrency.MainActor(unsafe) override public func applyMarginsForStyles()
  @_Concurrency.MainActor(unsafe) override public func applyPaddingsForStyles()
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) override public func applyUIUpdates()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.VBottomSheet {
  @_Concurrency.MainActor(unsafe) public func dismissBottomSheet()
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VBottomSheetVC : UIKit.UIViewController, PlateauMobile.BottomSheetControllerProtocol {
  @_Concurrency.MainActor(unsafe) public func getContentHeight() -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public typealias CalendarMontHandler = (Swift.Int, Swift.String, Swift.Int) -> Swift.Void
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class CalendarPickerMonthView : UIKit.UIView {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxColumnCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxColumnViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxColumn : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.DxColumn {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
extension PlateauMobile.DxColumn {
  @_Concurrency.MainActor(unsafe) public var selectedFilterOperation: Swift.String? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var sortIndex: Swift.Int? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var sortOrder: Foundation.ComparisonResult {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var visibleIndex: Swift.Int? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public func getDataField() -> Swift.String
  @_Concurrency.MainActor(unsafe) public func getCellTemplate() -> Swift.String?
  @_Concurrency.MainActor(unsafe) public func getAlignment() -> yoga.YGJustify?
  @_Concurrency.MainActor(unsafe) public var filterType: Swift.String {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var name: Swift.String {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public func getAllowExporting() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getAllowFiltering() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getAllowFixing() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getAllowHiding() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getAllowReordering() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getAllowSearch() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getAllowSorting() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getShowInColumnChooser() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func isCalculateCellValue() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func calculateCellValue(rowData: [Swift.String : Any]) -> Any
  @_Concurrency.MainActor(unsafe) public func isCalculateDisplayValue() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func calculateDisplayValue(rowData: [Swift.String : Any]) -> Any
  @_Concurrency.MainActor(unsafe) public func isCalculateSortValue() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func calculateSortValue(rowData: [Swift.String : Any]) -> Any
  @_Concurrency.MainActor(unsafe) public func getCaption() -> Swift.String?
  @_Concurrency.MainActor(unsafe) public func getDataType() -> PlateauMobile.DataType?
  @_Concurrency.MainActor(unsafe) public func getFilterOperations() -> [Swift.String]?
  @_Concurrency.MainActor(unsafe) public func isFilterTypeExculude() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func hasFormatValue() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func formatValue(value: Any?) -> Swift.String
  @_Concurrency.MainActor(unsafe) public func getHeaderCellTemplate() -> Swift.String?
  @_Concurrency.MainActor(unsafe) public func isRenderAsync() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getType() -> Swift.String?
  @_Concurrency.MainActor(unsafe) public func isBand() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func hasOwner() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) public func getOwner() -> Swift.String?
  @_Concurrency.MainActor(unsafe) public func getColumns() -> [Swift.String]?
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class TextInputsVM : PlateauMobile.BaseViewModel {
  @objc deinit
}
extension PlateauMobile.TextInputsVM {
  public enum KeybordType : Swift.String {
    case text
    case password
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VProgressLinearCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VProgressLinearStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var defaultColor: Swift.String
  @objc public var indeterminateColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VProgressLinearViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VProgressLinear : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) override public func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) override public func applyResizeForStyles()
  @_Concurrency.MainActor(unsafe) public var stripeFlag: Swift.Bool
  @_Concurrency.MainActor(unsafe) public func setStripeImage()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor(unsafe) override public func applyUIUpdates()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.VProgressLinear {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers public class QBScreenManager : ObjectiveC.NSObject {
  public var screenDelegate: PlateauMobile.QBBaseViewController
  public var simulatorController: PlateauMobile.QRScannerController?
  public var screenDelegateSiblings: [Any]
  public var loadingStateCounter: Swift.Int
  public static var sharedScreenManager: PlateauMobile.QBScreenManager!
  public static func initScreenManager() -> PlateauMobile.QBScreenManager
  public class func shared() -> PlateauMobile.QBScreenManager
  public func initializeAppContext(_ screenManager: PlateauMobile.QBScreenManager = QBScreenManager.shared())
  public class func screenDelegateViewApplyLayout()
  public static func viewsInScrollView(view: UIKit.UIView)
  public class func validationResultForComp(component: PlateauMobile.BaseComponent, validationResult: [Swift.String : Any])
  public class func pageCompleted()
  public class func pageRenderStarted(pageId: Swift.String)
  public class func eventCompleted(compUID: Swift.String, eventName: Swift.String, isPageComplete: Swift.Bool, pageId: Swift.String)
  public func updateStyles(includeCached: Swift.Bool, pageId: Swift.String) -> PlateauMobile.CSSS
  public func updateStlyeChangesOnly(components: [Any])
  public static func request(pagePath: Swift.String, display: @escaping (JavaScriptCore.JSValue, JavaScriptCore.JSValue, JavaScriptCore.JSValue, JavaScriptCore.JSValue, JavaScriptCore.JSValue, JavaScriptCore.JSValue, JavaScriptCore.JSValue) -> Swift.Void, parameters: [Swift.String : Any], transition: Swift.String = "push")
  public static func executeRulesSingle(value: Any, rules: JavaScriptCore.JSValue) -> Any
  public static func executeRulesMultiple(value: Any, rules: JavaScriptCore.JSValue) -> [Any]
  public static func initSimulator(staticClientId: Swift.String) -> PlateauMobile.QRScannerController
  public static func setLanguage(lang: Swift.String)
  public static func setEditMode(status: Swift.Bool)
  public static func goBack()
  public static func getMainCss() -> Swift.String
  public func loadCSS()
  public func setPipelineJson()
  public func setLoadingJson()
  public func downloadDocumentWithBase64(data: Swift.String, fileName: Swift.String)
  public func loadFileAsync(url: Foundation.URL, completion: @escaping (Swift.String?, Swift.Error?) -> Swift.Void)
  public static func loadFileSync(url: Foundation.URL, completion: @escaping (Swift.String?, Swift.Error?) -> Swift.Void)
  public static func requestPage(pagePath: Swift.String, parameters: [Swift.String : Any], screenDelegate: PlateauMobile.QMScreenDelegateProtocol, networkDelegate: PlateauMobile.QMNetworkDelegateProtocol, quickDelegate: PlateauMobile.QMQuickProtocol, transtition: Swift.String)
  public static func getCSSAndApplyStyles(elements: [Any]) -> [Swift.String : [Swift.String : Swift.String]]
  public static func applyCSSStyles(elements: [Any], cssStyles: [Swift.String : [Swift.String : Swift.String]]) -> [Swift.String : [Swift.String : Swift.String]]
  public static func qb_loadCSS(deviceSettings: Any, css: [Swift.String])
  public static func qb_loadDeviceSettings(deviceSettings: Any)
  public static func qb_loadGlobalCSS(deviceSettings: Swift.String, css: [Swift.String])
  public static func qb_ResetCache()
  public static func qb_ResetEngine()
  public static func openNativeScreen(screenId: Swift.String, param: [Swift.String : Any])
  @objc public static func openSimulatorJson(json: Swift.String, screenDelegate: PlateauMobile.QMScreenDelegateProtocol, networkDelegate: PlateauMobile.QMNetworkDelegateProtocol, quickDelegate: PlateauMobile.QMQuickProtocol, simulatorType: Swift.String)
  @objc public static func setSimulatorJsonLoaded(status: Swift.Bool)
  public static func qb_setAlertQjson(qjson: Swift.String, displayAlertCallback: @escaping (JavaScriptCore.JSValue) -> Swift.Void)
  public static func setAlertQjson()
  public class func getTopViewController(base: UIKit.UIViewController? = UIApplication.shared.windows.first?.rootViewController) -> UIKit.UIViewController?
  @objc override dynamic public init()
  @objc deinit
}
extension UIKit.UINavigationController {
  @_Concurrency.MainActor(unsafe) public func pop(transitionType type: QuartzCore.CATransitionType = CATransitionType.fade, duration: CoreFoundation.CFTimeInterval = 0.3)
  @_Concurrency.MainActor(unsafe) public func push(viewController vc: UIKit.UIViewController, transitionType type: QuartzCore.CATransitionType = CATransitionType.fade, duration: CoreFoundation.CFTimeInterval = 0.3, transitionSubtype: QuartzCore.CATransitionSubtype = CATransitionSubtype.fromLeft)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class Label : UIKit.UILabel {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class QBRenderingManager : ObjectiveC.NSObject {
  public static let shared: PlateauMobile.QBRenderingManager
  public var renderContext: PlateauMobile.RenderContext
  public var screenDelegate: PlateauMobile.QMScreenDelegateProtocol?
  public var quickDelegate: PlateauMobile.QMQuickProtocol?
  public var networkDelegate: PlateauMobile.QMNetworkDelegateProtocol?
  public var permissionDelegate: PlateauMobile.QPermissionManagementProtocol?
  public var containerView: PlateauMobile.CCContainerView {
    get
    set
  }
  public func startApplication(appUrl: Swift.String, transition: Swift.String = "push", parameters: [Swift.String : Any] = [:], previewMode: Swift.Bool = false, showloading: @escaping () -> Swift.Void, hideLoading: @escaping () -> Swift.Void, screenDelegate: PlateauMobile.QMScreenDelegateProtocol = QBRenderingManager.shared.screenDelegate!)
  public func startApp(configuration: PlateauMobile.QBConfiguration, parameters: [Swift.String : Any], successCallback: @escaping () -> Swift.Void, errorCallback: @escaping () -> Swift.Void)
  public func createContinerView() -> PlateauMobile.CCContainerView
  public func renderView(components: [Any], frame: CoreFoundation.CGRect, addContainerView: Swift.Bool, cssStyles: [Swift.String : [Swift.String : Swift.String]]) -> UIKit.UIView
  public func changeStyles(components: [Any], styles: [Swift.String : [Swift.String : Swift.String]])
  public func applyStyles(components: [Any], styles: [Swift.String : [Swift.String : Swift.String]])
  public func applyStyleToViewStyle(view: UIKit.UIView, styles: [Swift.String : Swift.String])
  public func reApplyStyle(comp: PlateauMobile.BaseComponent, styles: [Swift.String : [Swift.String : Swift.String]])
  public func applyStyle(comp: Any, styles: [Swift.String : [Swift.String : Swift.String]])
  public func findComponentInSlots(componentId: Swift.String, component: PlateauMobile.BaseComponent) -> Any?
  public func updateComponentInContextElements(componentId: Swift.String, contextElements: [Any]) -> Any?
  public func createScopedSlotsOfComponent(component: PlateauMobile.BaseComponent)
  public func createScopedSlotsOfComponents(components: [Any])
  public func callPostRender(component: PlateauMobile.BaseComponent)
  public func callInViewDidAppear(component: PlateauMobile.BaseComponent)
  public func callInViewWillAppear(component: PlateauMobile.BaseComponent)
  public func callWillLayoutApply(component: PlateauMobile.BaseComponent)
  public func callPostRenderInContextElements(contextElements: [Any]) -> PlateauMobile.BaseComponent?
  public func callInViewDidAppearForContextElements(contextElements: [Any]) -> PlateauMobile.BaseComponent?
  public func callInViewWillAppearForContextElements(contextElements: [Any]) -> PlateauMobile.BaseComponent?
  public func callInWillLayoutApplyForElements(elements: [Any]) -> PlateauMobile.BaseComponent?
  public func addDynamicContent(createdComp: PlateauMobile.BaseComponent, referenceComp: PlateauMobile.BaseComponent, compLocater: Swift.String, parentComp: PlateauMobile.BaseComponent) -> PlateauMobile.BaseComponent
  public func createAlertViewContainer(compUID: Swift.String) -> PlateauMobile.BaseComponent
  public func createContainerView(compUID: Swift.String) -> PlateauMobile.BaseComponent
  public func updateContainerView(viewAddress: Swift.String, elements: [Any], pageShift: Swift.Bool)
  public func setVisibleStatusOfComponent(componentId: Swift.String, visibleStatus: Swift.Bool, pageId: Swift.String)
  public func getComponentNameWithBundle(compName: Swift.String) -> Swift.String
  public func createComponent(componentInfo: PlateauMobile.ComponentInfo) -> PlateauMobile.BaseComponent
  public func setSlotsParent(slots: [Swift.String : [Any]], parent: PlateauMobile.BaseComponent)
  public func deleteComponentFromContext(compUID: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VStepperHeaderCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VStepperHeaderViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VStepperHeaderStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var innerBoxShadow: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VStepperHeader : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) override public func applyStyleUpdates()
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.VStepperHeader {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers public class DxScrollingCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxScrollingViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxScrolling : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.DxScrolling {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VDataTableCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VDataTableViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@_hasMissingDesignatedInitializers public class ObjectHelper {
  public static func propertyExists(obj: Swift.AnyObject, propName: Swift.String) -> Swift.Bool
  public static func getPropertiesAndTypes(forObject: Any?) -> [Swift.String : Swift.String]
  public static func convertToString(value: Any) -> Swift.String
  @objc deinit
}
extension UIKit.UIView {
  @_Concurrency.MainActor(unsafe) public func findSubviewWithTag(tag: Swift.Int) -> UIKit.UIView?
  @_Concurrency.MainActor(unsafe) public func findComponentWithId(id: Swift.String) -> PlateauMobile.BaseComponent
  @_Concurrency.MainActor(unsafe) public func applyStyles(styles: PlateauMobile.BaseCss)
  @_Concurrency.MainActor(unsafe) public func applyFlexStyles(styles: PlateauMobile.BaseCss)
}
extension ObjectiveC.NSObject {
  public func toStringValue() -> Swift.String
  public func toIntValue() -> Foundation.NSNumber
  public func toCGFloatValue() -> CoreFoundation.CGFloat
  public func toBoolValue() -> Swift.Bool
}
extension JavaScriptCore.JSValue {
  public func tofuncDictionary() -> [Swift.AnyHashable : Any]!
  public func tofuncArray() -> [Any]!
}
extension UIKit.UIColor {
  public static var random: UIKit.UIColor {
    get
  }
}
extension UIKit.UIDevice {
  @_Concurrency.MainActor(unsafe) public static var isSimulator: Swift.Bool {
    get
  }
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VBtnCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VBtnViewModel : PlateauMobile.BaseViewModel {
  @objc public var background_color: Swift.String
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VBtnStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var fontColor: Swift.String
  @objc public var fontFamily: Swift.String
  @objc public var fontSize: Swift.String
  @objc public var fontStyle: Swift.String
  @objc public var fontWeight: Swift.Int
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class VBtn : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @objc @_Concurrency.MainActor(unsafe) public func setBackgroundColor(color: UIKit.UIColor)
  @objc @_Concurrency.MainActor(unsafe) public func setMaskedCorners(corners: QuartzCore.CACornerMask)
  @objc deinit
}
extension PlateauMobile.VBtn {
  public enum ButtonType : Swift.Int {
    case raised
    case depressed
    case outlined
    case rounded
    case text
    case fab
    case icon
    case tile
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
}
extension PlateauMobile.VBtn {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func initialize()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class QDocumentViewerCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QDocumentViewerStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var descriptionFontColor: Swift.String
  @objc public var descriptionFontFamily: Swift.String
  @objc public var descriptionFontSize: Swift.String
  @objc public var descriptionFontStyle: Swift.String
  @objc public var descriptionFontWeight: Swift.Int
  @objc public var toolbarBackgroundColor: Swift.String
  @objc public var toolbarButtonColor: Swift.String
  @objc public var pdfBackgroundColor: Swift.String
  @objc public var borderColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class QDocumentViewerViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class QDocumentViewer : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, WebKit.WKUIDelegate, WebKit.WKNavigationDelegate {
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc public func webView(_ webView: WebKit.WKWebView, didFinish navigation: WebKit.WKNavigation!)
  @objc @_Concurrency.MainActor(unsafe) public func downloadPdf(_ sender: UIKit.UIButton)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.QDocumentViewer {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func initialize()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) dynamic public func initializeStyle()
}
extension PlateauMobile.QDocumentViewer {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func loadWebView()
}
extension PlateauMobile.QDocumentViewer : UIKit.UIScrollViewDelegate {
  @nonobjc @_Concurrency.MainActor(unsafe) public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationAction: WebKit.WKNavigationAction, decisionHandler: @escaping (WebKit.WKNavigationActionPolicy) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func scrollViewDidEndDragging(_ scrollView: UIKit.UIScrollView, willDecelerate decelerate: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func scrollViewDidEndDecelerating(_ scrollView: UIKit.UIScrollView)
}
public enum HTTPClientResult {
  case success(Foundation.Data, Foundation.HTTPURLResponse)
  case failure(Swift.Error)
}
public enum HTTPMethodType : Swift.String {
  case get
  case put
  case post
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct QHTTPHeaders {
  public init(_ dictionary: [Swift.String : Swift.String])
  public mutating func add(name: Swift.String, value: Swift.String)
  public mutating func add(_ header: PlateauMobile.QHTTPHeader)
  public mutating func update(name: Swift.String, value: Swift.String)
  public mutating func update(_ header: PlateauMobile.QHTTPHeader)
  public mutating func remove(name: Swift.String)
  public func value(for name: Swift.String) -> Swift.String?
  public subscript(name: Swift.String) -> Swift.String? {
    get
    set
  }
  public var dictionary: [Swift.String : Swift.String] {
    get
  }
}
extension PlateauMobile.QHTTPHeaders : Swift.Collection {
  public var startIndex: Swift.Int {
    get
  }
  public var endIndex: Swift.Int {
    get
  }
  public subscript(position: Swift.Int) -> PlateauMobile.QHTTPHeader {
    get
  }
  public func index(after i: Swift.Int) -> Swift.Int
  public typealias Element = PlateauMobile.QHTTPHeader
  public typealias Index = Swift.Int
  public typealias Indices = Swift.DefaultIndices<PlateauMobile.QHTTPHeaders>
  public typealias Iterator = Swift.IndexingIterator<PlateauMobile.QHTTPHeaders>
  public typealias SubSequence = Swift.Slice<PlateauMobile.QHTTPHeaders>
}
public struct QHTTPHeader : Swift.Hashable {
  public let name: Swift.String
  public let value: Swift.String
  public init(name: Swift.String, value: Swift.String)
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: PlateauMobile.QHTTPHeader, b: PlateauMobile.QHTTPHeader) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension PlateauMobile.QHTTPHeaders : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
extension PlateauMobile.QHTTPHeader : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
public protocol HTTPClient {
  func request(to url: Swift.String, parameters: [Swift.String : Swift.String], body: [Swift.String : Any?], method: PlateauMobile.HTTPMethodType, headers: PlateauMobile.QHTTPHeaders, completion: @escaping (PlateauMobile.HTTPClientResult) -> Swift.Void)
}
public class URLSessionHTTPClient : PlateauMobile.HTTPClient {
  public init(session: Foundation.URLSession)
  public func request(to url: Swift.String, parameters: [Swift.String : Swift.String], body: [Swift.String : Any?], method: PlateauMobile.HTTPMethodType, headers: PlateauMobile.QHTTPHeaders, completion: @escaping (PlateauMobile.HTTPClientResult) -> Swift.Void)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VFooterCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VFooterStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VFooterViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VFooter : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.VFooter {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers public class DxPagerCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxPagerViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxPager : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, UIKit.UIPickerViewDelegate, UIKit.UIPickerViewDataSource {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func setPaging(_ dxPaging: PlateauMobile.DxPaging)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) public func getPageSize() -> Swift.Int
  @_Concurrency.MainActor(unsafe) public func getPageIndex() -> Swift.Int
  @objc @_Concurrency.MainActor(unsafe) public func pageClicked(sender: UIKit.UIButton!)
  @objc @_Concurrency.MainActor(unsafe) public func pageSizeClicked(sender: UIKit.UIButton!)
  @objc @_Concurrency.MainActor(unsafe) public func arrowClicked(sender: UIKit.UIButton!)
  @objc @_Concurrency.MainActor(unsafe) public func pickerClicked(sender: UIKit.UIButton!)
  @_Concurrency.MainActor(unsafe) @objc public func numberOfComponents(in pickerView: UIKit.UIPickerView) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc public func pickerView(_ pickerView: UIKit.UIPickerView, numberOfRowsInComponent component: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc public func pickerView(_ pickerView: UIKit.UIPickerView, titleForRow row: Swift.Int, forComponent component: Swift.Int) -> Swift.String?
  @_Concurrency.MainActor(unsafe) @objc public func pickerView(_ pickerView: UIKit.UIPickerView, didSelectRow row: Swift.Int, inComponent component: Swift.Int)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class MessagingCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class MessagingViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class Messaging : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VIconCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VIconViewModel : PlateauMobile.BaseViewModel {
  @objc public var text: Swift.String {
    @objc get
    @objc set
  }
  @objc public var color: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VIconStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var iconSize: Swift.String
  @objc public var iconColor: Swift.String
  @objc deinit
}
public protocol DxProtocol : AnyObject {
  var numberOfVisibleColumns: Swift.Int { get }
  var getColumns: [PlateauMobile.Column] { get }
  var numberOfPages: Swift.Int { get }
  var totalItems: Swift.Int { get }
  var dataSource: [Swift.Dictionary<Swift.String, Any>] { get }
  var pageIndicies: (Swift.Int, Swift.Int) { get }
  var showColumnSeperator: Swift.Bool { get }
  var showSelectColumn: Swift.Bool { get }
  var showDragColumn: Swift.Bool { get }
  var getDataContainer: UIKit.UIView { get }
  var getRows: [PlateauMobile.DxRowView] { get }
  var dataGrid: PlateauMobile.DxDataGrid { get }
  var filteredRows: [Swift.Int] { get }
  func updateDataSource(dataSource: [Swift.Dictionary<Swift.String, Any>])
  func updatePage(page: Swift.Int)
  func updatePageSize(size: Swift.Int, onPageChange: (Swift.Int) -> Swift.Void)
  func reload()
  func sortColumn(column key: Swift.String, order: Foundation.ComparisonResult)
  func filterRows(column key: Swift.String, value: Swift.String, type: PlateauMobile.OperationType)
  func getColumnType(column key: Swift.String) -> PlateauMobile.DataType
  func setFilter()
  func applyLayout(preservingOrigin: Swift.Bool)
  func replaceDraggingRow(view: PlateauMobile.DxRowView, newView: UIKit.UIView?)
  func getState() -> PlateauMobile.GridState
  func setState(state: PlateauMobile.GridState)
  func allowExporting(column key: Swift.String) -> Swift.Bool
  func allowFiltering(column key: Swift.String) -> Swift.Bool
  func allowFixing(column key: Swift.String) -> Swift.Bool
  func allowHiding(column key: Swift.String) -> Swift.Bool
  func allowSorting(column key: Swift.String) -> Swift.Bool
  func allowSearch(column key: Swift.String) -> Swift.Bool
  func updateDataTypes()
  func filterOperations(column key: Swift.String) -> [Swift.String]?
  func isFilterTypeExculude(column key: Swift.String) -> Swift.Bool
  func getSelectedFilterOperation(column key: Swift.String) -> Swift.String?
  func setSelectedFilterOperation(column key: Swift.String, operation: Swift.String)
  func sort(reload: Swift.Bool)
  func onColumnChooserDragBegin(view: UIKit.UIView, column key: Swift.String, gesture: UIKit.UIPanGestureRecognizer)
  func onColumnChooserDragEnd(column key: Swift.String, gesture: UIKit.UIPanGestureRecognizer)
  func onColumnChooserDrag(column key: Swift.String, gesture: UIKit.UIPanGestureRecognizer)
  func changeColumnVisibility(column key: Swift.String, show: Swift.Bool)
  func getLocale() -> Foundation.Locale
  func verticalSeperator() -> UIKit.UIView
}
public enum OperationType : Swift.Int {
  case between
  case contains
  case endsWith
  case equals
  case greaterThan
  case greaterThanOrEqualTo
  case lessThan
  case lessThanOrEqualTo
  case notContains
  case notEqual
  case startsWith
  case reset
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public enum DataType : Swift.String {
  case string
  case double
  case bool
  case date
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class GridState {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class GridPaging {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class GridColumns {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class GridSearchPanel {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class ReservedStrings {
  public static func getAttributedText(_ key: Swift.String) -> Swift.String
  public static func getBandText(_ id: Swift.Int) -> Swift.String
  @objc deinit
}
@_hasMissingDesignatedInitializers public class Column {
  public var columns: PlateauMobile.Columns {
    get
  }
  public var key: Swift.String {
    get
  }
  public var owner: PlateauMobile.Column? {
    get
  }
  public var dataType: PlateauMobile.DataType
  public var isHidden: Swift.Bool {
    get
    set
  }
  public var dxColumn: PlateauMobile.DxColumn?
  public var value: Swift.String {
    get
  }
  public var count: Swift.Int {
    get
  }
  public var countAllVisible: Swift.Int {
    get
  }
  public var getColumn: [PlateauMobile.Column] {
    get
  }
  public var getColumnAndOwner: [PlateauMobile.Column] {
    get
  }
  public var getVisibleColumn: [PlateauMobile.Column] {
    get
  }
  public var isBand: Swift.Bool {
    get
  }
  public func setDataType(_ finder: (Swift.String) -> PlateauMobile.DataType)
  public func setValue(_ finder: @escaping (Swift.String, Swift.Bool) -> Swift.String)
  public func setOwner(_ owner: PlateauMobile.Column?)
  public func setColumns(columns: [Swift.Int : PlateauMobile.Column], columnIndexChange: @escaping (Swift.String, Swift.Int) -> Swift.Void)
  public func setColumns(columns: [PlateauMobile.Column])
  @objc deinit
}
@_hasMissingDesignatedInitializers public class Columns {
  public var count: Swift.Int {
    get
  }
  public var countAll: Swift.Int {
    get
  }
  public var countAllVisible: Swift.Int {
    get
  }
  public var countVisible: Swift.Int {
    get
  }
  public var getColumns: [PlateauMobile.Column] {
    get
  }
  public var getAllColumns: [PlateauMobile.Column] {
    get
  }
  public var getAllColumnsAndOwners: [PlateauMobile.Column] {
    get
  }
  public var getVisibleColumns: [PlateauMobile.Column] {
    get
  }
  public var isEmpty: Swift.Bool {
    get
  }
  public func setValue(_ finder: @escaping (Swift.String, Swift.Bool) -> Swift.String)
  public func setDataType(_ finder: (Swift.String) -> PlateauMobile.DataType)
  public func index(column key: Swift.String) -> Swift.Int?
  public func setIndex(column key: Swift.String, index: Swift.Int)
  public func remove(at: Swift.Int) -> PlateauMobile.Column
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class QLabelCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QLabelStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var fontWeight: Swift.Int
  @objc public var fontColor: Swift.String
  @objc public var fontSize: Swift.String
  @objc public var fontStyle: Swift.String
  @objc public var font: Swift.String
  @objc public var fontFamily: Swift.String
  @objc public var combinedFont: Swift.String
  @objc public var lineHeight: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QLabelViewModel : PlateauMobile.BaseViewModel {
  @objc public var processHtml: Swift.Bool
  @objc public var text: Any? {
    @objc get
    @objc set
  }
  @objc public var textString: Swift.String? {
    @objc get
    @objc set
  }
  @objc public var whiteSpace: Swift.String? {
    @objc get
    @objc set
  }
  @objc public var textOverflow: Swift.String? {
    @objc get
    @objc set
  }
  @objc public var textcolor: UIKit.UIColor
  @objc public var backgroundColor: UIKit.UIColor
  @objc public var aligment: UIKit.NSTextAlignment
  @objc public var leftInset: CoreFoundation.CGFloat
  @objc public var innerClass: Any
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class QLabel : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) public var delegate: Any?
  @_Concurrency.MainActor(unsafe) public var label: PlateauMobile.Label
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewDidAppear()
  @_Concurrency.MainActor(unsafe) override public func applyStyleUpdates()
  @_Concurrency.MainActor(unsafe) override public func applyUIUpdates()
  @_Concurrency.MainActor(unsafe) public func setLineHeight(lineHeight: CoreFoundation.CGFloat)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class QVideoCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class QVideoViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class QVideo : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func setupVideoPlayer()
  @objc @_Concurrency.MainActor(unsafe) public func play()
  @objc @_Concurrency.MainActor(unsafe) public func pause()
  @objc @_Concurrency.MainActor(unsafe) public func load()
  @objc @_Concurrency.MainActor(unsafe) public func currentTime() -> Swift.Double
  @objc @_Concurrency.MainActor(unsafe) public func volume() -> Swift.Double
  @objc @_Concurrency.MainActor(unsafe) public func duration() -> Swift.Double
  @objc @_Concurrency.MainActor(unsafe) public func currentSrc() -> Swift.String
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor(unsafe) public func setProps()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VRadioGroupCss : PlateauMobile.SCInputsCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VRadioGroupStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var activeRadioLabelFontColor: Swift.String
  @objc public var activeRadioLabelFontFamily: Swift.String
  @objc public var activeRadioLabelFontSize: Swift.String
  @objc public var activeRadioLabelFontStyle: Swift.String
  @objc public var activeRadioCombinedFont: Swift.String
  @objc public var activeRadioLabelFontWeight: Swift.Int
  @objc public var inactiveRadioLabelFontWeight: Swift.Int
  @objc public var inactiveRadioLabelFontColor: Swift.String
  @objc public var inactiveRadioLabelFontFamily: Swift.String
  @objc public var inactiveRadioLabelFontSize: Swift.String
  @objc public var inactiveRadioLabelFontStyle: Swift.String
  @objc public var inactiveRadioCombinedFont: Swift.String
  @objc public var hoverColor: Swift.String
  @objc public var activeRadioButtonColor: Swift.String
  @objc public var inactiveRadioButtonColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VRadioGroupViewModel : PlateauMobile.SCInputsViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VRadioGroup : PlateauMobile.SCInputs {
  @_Concurrency.MainActor(unsafe) @objc override public func onPostRender()
  @_Concurrency.MainActor(unsafe) @objc override public func initialize()
  @_Concurrency.MainActor(unsafe) @objc override public func addSlot()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class QQrReaderCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class QQrReaderViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class QQrReader : PlateauMobile.BaseComponent, PlateauMobile.QMComponent, AVFoundation.AVCaptureMetadataOutputObjectsDelegate {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @_Concurrency.MainActor(unsafe) public func addQRScanner()
  @_Concurrency.MainActor(unsafe) @objc public func metadataOutput(_ output: AVFoundation.AVCaptureMetadataOutput, didOutput metadataObjects: [AVFoundation.AVMetadataObject], from connection: AVFoundation.AVCaptureConnection)
  @_Concurrency.MainActor(unsafe) public func startCamera()
  @_Concurrency.MainActor(unsafe) @objc override public func onRuntimePermissionGranted(grantedPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc override public func onRuntimePermissionDenied(deniedPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc override public func onNeverAskAgainRuntimePermission(neverAskPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc override public func onViewDidAppear()
  @_Concurrency.MainActor(unsafe) public func addMaskLayer()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class QRScannerController : UIKit.UIViewController, PlateauMobile.QMScreenDelegateProtocol, PlateauMobile.QMNetworkDelegateProtocol, PlateauMobile.QMQuickProtocol, PlateauMobile.QRuntimePermissionListenerProtocol {
  @_Concurrency.MainActor(unsafe) @objc public func saveToLocalStorage(key: Swift.String, value: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc public func getFromLocalStorage(key: Swift.String) -> Swift.String
  @_Concurrency.MainActor(unsafe) @objc public func clearLocalStorage()
  @_Concurrency.MainActor(unsafe) @objc public func removeItemFromLocalStorage(key: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc public func callMethod(functionName: Swift.String?, param: [Swift.String : Any]?, callBack: JavaScriptCore.JSValue, context: JavaScriptCore.JSContext, pageNames: [Swift.String])
  @_Concurrency.MainActor(unsafe) @objc public func hostTrigger(functionName: Swift.String?, param: [Swift.String : Any]?, callBack: JavaScriptCore.JSValue, context: JavaScriptCore.JSContext, pageNames: [Swift.String])
  @_Concurrency.MainActor(unsafe) @objc public func setQuickSettings()
  @_Concurrency.MainActor(unsafe) @objc public func getMainCss() -> Swift.String
  @_Concurrency.MainActor(unsafe) @objc public var parameters: [Swift.String : Any]
  @_Concurrency.MainActor(unsafe) @objc public func showLoadingView()
  @_Concurrency.MainActor(unsafe) @objc public func hideLoadingView()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) public func scanQRCode()
  @_Concurrency.MainActor(unsafe) public func startCamera()
  @_Concurrency.MainActor(unsafe) public func startCapture()
  @_Concurrency.MainActor(unsafe) @objc public func onRuntimePermissionGranted(grantedPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc public func onRuntimePermissionDenied(deniedPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc public func onNeverAskAgainRuntimePermission(neverAskPermissions: [Swift.String]?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public func launchApp(decodedURL: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLayoutSubviews()
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension PlateauMobile.QRScannerController : AVFoundation.AVCaptureMetadataOutputObjectsDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func metadataOutput(_ output: AVFoundation.AVCaptureMetadataOutput, didOutput metadataObjects: [AVFoundation.AVMetadataObject], from connection: AVFoundation.AVCaptureConnection)
}
public protocol Queue {
  associatedtype Element
  mutating func enqueue(_ element: Self.Element) -> Swift.Bool
  mutating func dequeue() -> Self.Element?
  mutating func clear()
}
public struct OneSizedDisplayQueue<T> : PlateauMobile.Queue {
  public mutating func enqueue(_ element: T) -> Swift.Bool
  public mutating func dequeue() -> T?
  public mutating func clear()
  public typealias Element = T
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class Slider : UIKit.UIControl {
  @_Concurrency.MainActor(unsafe) open var readOnly: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var hint: Swift.String {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var hasSucces: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var hasError: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var minimumValue: Swift.Double {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var maximumValue: Swift.Double {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var knobValue: Swift.Double {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var stepValue: Swift.Double {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var trackTintColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var trackHighlightTintColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var trackThickness: CoreFoundation.CGFloat {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var trueTrackThickness: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var dragTrack: Swift.Bool
  @_Concurrency.MainActor(unsafe) open var knobSize: CoreFoundation.CGFloat {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var trueKnobSize: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var knobTintColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var knobBorderThickness: CoreFoundation.CGFloat {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var knobBorderTintColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var knobHasShadow: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var curvaceousness: CoreFoundation.CGFloat {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var labelFont: UIKit.UIFont {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var labelColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var hideLabels: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var frame: CoreFoundation.CGRect {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) open func updateLayerFramesAndPositions()
  @_Concurrency.MainActor(unsafe) open func updateTrackLayerFrameAndKnobPositions()
  @_Concurrency.MainActor(unsafe) open func getLabelText(forValue value: Swift.Double) -> Swift.String
  @_Concurrency.MainActor(unsafe) open func updateLabelText()
  @_Concurrency.MainActor(unsafe) open func updateLabelPositions()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func beginTracking(_ touch: UIKit.UITouch, with event: UIKit.UIEvent?) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func continueTracking(_ touch: UIKit.UITouch, with event: UIKit.UIEvent?) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func endTracking(_ touch: UIKit.UITouch?, with event: UIKit.UIEvent?)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class InputsCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class InputsVM : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class Inputs : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) public func onTap(_ sender: UIKit.UITapGestureRecognizer)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VStepperCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VStepperViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VStepperStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var stepCircleSize: Swift.String
  @objc public var inactiveStepNumberFontColor: Swift.String
  @objc public var inactiveStepNumberFontFamily: Swift.String
  @objc public var inactiveStepNumberFontSize: Swift.String
  @objc public var inactiveStepNumberFontStyle: Swift.String
  @objc public var inactiveStepNumberFontWeight: Swift.Int
  @objc public var inactiveStepNumberCombinedFont: Swift.String
  @objc public var activeStepNumberFontColor: Swift.String
  @objc public var activeStepNumberFontFamily: Swift.String
  @objc public var activeStepNumberFontSize: Swift.String
  @objc public var activeStepNumberFontStyle: Swift.String
  @objc public var activeStepNumberFontWeight: Swift.Int
  @objc public var activeStepNumberCombinedFont: Swift.String
  @objc public var completedStepNumberFontColor: Swift.String
  @objc public var completedStepNumberFontFamily: Swift.String
  @objc public var completedStepNumberFontSize: Swift.String
  @objc public var completedStepNumberFontStyle: Swift.String
  @objc public var completedStepNumberFontWeight: Swift.Int
  @objc public var completedStepNumberCombinedFont: Swift.String
  @objc public var inactiveStepLabelFontColor: Swift.String
  @objc public var inactiveStepLabelFontFamily: Swift.String
  @objc public var inactiveStepLabelFontSize: Swift.String
  @objc public var inactiveStepLabelFontStyle: Swift.String
  @objc public var inactiveStepLabelFontWeight: Swift.Int
  @objc public var inactiveStepLabelCombinedFont: Swift.String
  @objc public var activeStepLabelFontColor: Swift.String
  @objc public var activeStepLabelFontFamily: Swift.String
  @objc public var activeStepLabelFontSize: Swift.String
  @objc public var activeStepLabelFontStyle: Swift.String
  @objc public var activeStepLabelFontWeight: Swift.Int
  @objc public var activeStepLabelCombinedFont: Swift.String
  @objc public var completedStepLabelFontColor: Swift.String
  @objc public var completedStepLabelFontFamily: Swift.String
  @objc public var completedStepLabelFontSize: Swift.String
  @objc public var completedStepLabelFontStyle: Swift.String
  @objc public var completedStepLabelFontWeight: Swift.Int
  @objc public var completedStepLabelCombinedFont: Swift.String
  @objc public var inactiveStepBackgroundColor: Swift.String
  @objc public var activeStepBackgroundColor: Swift.String
  @objc public var completedStepBackgroundColor: Swift.String
  @objc public var inactiveStepCircleColor: Swift.String
  @objc public var activeStepCircleColor: Swift.String
  @objc public var completedStepCircleColor: Swift.String
  @objc public var inactiveStepBoxShadow: Swift.String
  @objc public var activeStepBoxShadow: Swift.String
  @objc public var completedStepBoxShadow: Swift.String
  @objc public var inactiveStepCircleBoxShadow: Swift.String
  @objc public var activeStepCircleBoxShadow: Swift.String
  @objc public var completedStepCircleBoxShadow: Swift.String
  @objc public var inactiveStepBoxSizing: Swift.String
  @objc public var inactiveStepBorderTopStyle: Swift.String
  @objc public var inactiveStepBorderRightStyle: Swift.String
  @objc public var inactiveStepBorderBottomStyle: Swift.String
  @objc public var inactiveStepBorderLeftStyle: Swift.String
  @objc public var inactiveStepBorderTopLeftRadius: Swift.String
  @objc public var inactiveStepBorderTopRightRadius: Swift.String
  @objc public var inactiveStepBorderBottomLeftRadius: Swift.String
  @objc public var inactiveStepBorderBottomRightRadius: Swift.String
  @objc public var inactiveStepBorderTopWidth: Swift.String
  @objc public var inactiveStepBorderRightWidth: Swift.String
  @objc public var inactiveStepBorderBottomWidth: Swift.String
  @objc public var inactiveStepBorderLeftWidth: Swift.String
  @objc public var inactiveStepBorderColor: Swift.String
  @objc public var activeStepBoxSizing: Swift.String
  @objc public var activeStepBorderTopStyle: Swift.String
  @objc public var activeStepBorderRightStyle: Swift.String
  @objc public var activeStepBorderBottomStyle: Swift.String
  @objc public var activeStepBorderLeftStyle: Swift.String
  @objc public var activeStepBorderTopLeftRadius: Swift.String
  @objc public var activeStepBorderTopRightRadius: Swift.String
  @objc public var activeStepBorderBottomLeftRadius: Swift.String
  @objc public var activeStepBorderBottomRightRadius: Swift.String
  @objc public var activeStepBorderTopWidth: Swift.String
  @objc public var activeStepBorderRightWidth: Swift.String
  @objc public var activeStepBorderBottomWidth: Swift.String
  @objc public var activeStepBorderLeftWidth: Swift.String
  @objc public var activeStepBorderColor: Swift.String
  @objc public var completedStepBoxSizing: Swift.String
  @objc public var completedStepBorderTopStyle: Swift.String
  @objc public var completedStepBorderRightStyle: Swift.String
  @objc public var completedStepBorderBottomStyle: Swift.String
  @objc public var completedStepBorderLeftStyle: Swift.String
  @objc public var completedStepBorderTopLeftRadius: Swift.String
  @objc public var completedStepBorderTopRightRadius: Swift.String
  @objc public var completedStepBorderBottomLeftRadius: Swift.String
  @objc public var completedStepBorderBottomRightRadius: Swift.String
  @objc public var completedStepBorderTopWidth: Swift.String
  @objc public var completedStepBorderRightWidth: Swift.String
  @objc public var completedStepBorderBottomWidth: Swift.String
  @objc public var completedStepBorderLeftWidth: Swift.String
  @objc public var completedStepBorderColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VStepper : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @objc deinit
  @_Concurrency.MainActor(unsafe) override public func applyUIUpdates()
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VTextareaCss : PlateauMobile.InputBaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTextareaStyleProps : PlateauMobile.InputBaseStyleProps {
  @objc public var defaultInnerBorderColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTextareaViewModel : PlateauMobile.InputBaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VTextarea : PlateauMobile.InputBase, UIKit.UIGestureRecognizerDelegate, UIKit.UITextViewDelegate {
  @objc @_Concurrency.MainActor(unsafe) override public func applyUIUpdates()
  @_Concurrency.MainActor(unsafe) @objc override public func setFonts()
  @_Concurrency.MainActor(unsafe) @objc override public func applyStyleUpdates()
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc public func textViewDidBeginEditing(_ textView: UIKit.UITextView)
  @_Concurrency.MainActor(unsafe) @objc public func textViewDidEndEditing(_ textView: UIKit.UITextView)
  @_Concurrency.MainActor(unsafe) @objc public func textViewDidChange(_ textView: UIKit.UITextView)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VDividerCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VDividerStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var dividerWidthSize: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VDividerViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class CalendarDayButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) public var styleProps: PlateauMobile.VDatePickerStyleProps?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxTotalItemCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxTotalItemViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxTotalItem : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.DxTotalItem {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
public protocol VCarouselDelegate {
  func carouselWillBeginScrolling(_ carousel: PlateauMobile.VCarousel)
  func carouselDidEndScrolling(_ carousel: PlateauMobile.VCarousel)
  func carousel(_ carousel: PlateauMobile.VCarousel, currentItemDidChangeToIndex index: Swift.Int)
  func carousel(_ carousel: PlateauMobile.VCarousel, willBeginScrollingToIndex index: Swift.Int)
  func carousel(_ carousel: PlateauMobile.VCarousel, didEndScrollingToIndex index: Swift.Int)
  func carousel(_ carousel: PlateauMobile.VCarousel, didSelectItemAtIndex index: Swift.Int)
  func carousel(_ carousel: PlateauMobile.VCarousel, shouldSelectItemAtIndex index: Swift.Int) -> Swift.Bool
  func carousel(_ carousel: PlateauMobile.VCarousel, spacingForOffset offset: CoreFoundation.CGFloat) -> CoreFoundation.CGFloat
}
extension PlateauMobile.VCarouselDelegate {
  public func carouselWillBeginScrolling(_ carousel: PlateauMobile.VCarousel)
  public func carouselDidEndScrolling(_ carousel: PlateauMobile.VCarousel)
  public func carousel(_ carousel: PlateauMobile.VCarousel, currentItemDidChangeToIndex index: Swift.Int)
  public func carousel(_ carousel: PlateauMobile.VCarousel, willBeginScrollingToIndex index: Swift.Int)
  public func carousel(_ carousel: PlateauMobile.VCarousel, didEndScrollingToIndex index: Swift.Int)
  public func carousel(_ carousel: PlateauMobile.VCarousel, didSelectItemAtIndex index: Swift.Int)
  public func carousel(_ carousel: PlateauMobile.VCarousel, shouldSelectItemAtIndex index: Swift.Int) -> Swift.Bool
  public func carousel(_ carousel: PlateauMobile.VCarousel, spacingForOffset offset: CoreFoundation.CGFloat) -> CoreFoundation.CGFloat
}
public protocol BottomSheetControllerProtocol : UIKit.UIViewController {
  func getContentHeight() -> CoreFoundation.CGFloat
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class BottomSheetController : UIKit.UIViewController {
  public enum CardState {
    case expanded
    case collapsed
    public static func == (a: PlateauMobile.BottomSheetController.CardState, b: PlateauMobile.BottomSheetController.CardState) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
  @_Concurrency.MainActor(unsafe) weak public var delegate: PlateauMobile.BottomSheetControllerProtocol?
  @_Concurrency.MainActor(unsafe) weak public var controllerDelegate: PlateauMobile.VBottomSheet?
  @_Concurrency.MainActor(unsafe) public var stateChanged: (PlateauMobile.BottomSheetController.CardState) -> Swift.Void
  @_Concurrency.MainActor(unsafe) public func setup(initizlied: Swift.Bool)
  @_Concurrency.MainActor(unsafe) convenience public init(_ contentViewController: PlateauMobile.BottomSheetControllerProtocol)
  @_Concurrency.MainActor(unsafe) public func startAnimation()
  @_Concurrency.MainActor(unsafe) public func dismiss(_ didFinish: () -> Swift.Void = {})
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VRatingCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers final public class VRatingViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) final public class VRating : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) final public func initialize()
  @_Concurrency.MainActor(unsafe) final public func initializeUI()
  @_Concurrency.MainActor(unsafe) final public func initializeBindings()
  @_Concurrency.MainActor(unsafe) final public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) final public func onTap(_ sender: UIKit.UIButton)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class MessageSpotView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) public func getMessageSpotViewHeight() -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VListItemGroupCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VListItemGroupViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VListItemGroup : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
}
extension PlateauMobile.VListItemGroup {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers @objcMembers final public class VNavigationDrawerCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VNavigationDrawerStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class VNavigationDrawerViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) final public class VNavigationDrawer : PlateauMobile.BaseComponent {
  @_Concurrency.MainActor(unsafe) @objc override final public func willLayoutApply()
  @_Concurrency.MainActor(unsafe) override final public func applyMarginsForStyles()
  @_Concurrency.MainActor(unsafe) override final public func applyPaddingsForStyles()
  @_Concurrency.MainActor(unsafe) override final public func applyResizeForStyles()
  @_Concurrency.MainActor(unsafe) override final public func applyBackgroundColorForStyles()
  @_Concurrency.MainActor(unsafe) override final public func setShadows()
  @_Concurrency.MainActor(unsafe) override final public func setBorders()
  @_Concurrency.MainActor(unsafe) override final public func setCorners()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.VNavigationDrawer : PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) final public func initialize()
  @_Concurrency.MainActor(unsafe) final public func initializeUI()
  @_Concurrency.MainActor(unsafe) final public func initializeBindings()
  @_Concurrency.MainActor(unsafe) final public func initializeStyle()
}
extension PlateauMobile.VNavigationDrawer {
  @objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) final public class NavigationDrawerFullScreenView : UIKit.UIView {
    @_Concurrency.MainActor(unsafe) @objc override final public func hitTest(_ point: CoreFoundation.CGPoint, with event: UIKit.UIEvent?) -> UIKit.UIView?
    @objc deinit
  }
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VSlideItemCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VSlideItemViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxSummaryCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxSummaryViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxSummary : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.DxSummary {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VTabCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTabViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VTabStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var defaultColor: Swift.String
  @objc public var innerBoxShadow: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VTab : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) override public func applyBackgroundColorForStyles()
  @objc @_Concurrency.MainActor(unsafe) public func onTap(_ sender: UIKit.UITapGestureRecognizer)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VCheckboxCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VCheckboxViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VCheckboxStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var selectedBorderColor: Swift.String
  @objc public var outerBorderColor: Swift.String
  @objc public var selectedBorderSize: Swift.String
  @objc public var defaultBorderSize: Swift.String
  @objc public var fontColor: Swift.String
  @objc public var fontSize: Swift.String
  @objc public var fontFamily: Swift.String
  @objc public var fontStyle: Swift.String
  @objc public var combinedFont: Swift.String
  @objc public var fontWeight: Swift.Int
  @objc public var imageSize: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class VCheckbox : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc @_Concurrency.MainActor(unsafe) override public func setBorders()
  @objc @_Concurrency.MainActor(unsafe) public func updateStyles()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewWillAppear()
  @objc @_Concurrency.MainActor(unsafe) override public func applyUIUpdates()
  @objc @_Concurrency.MainActor(unsafe) public func initialize()
  @objc @_Concurrency.MainActor(unsafe) public func initializeUI()
  @objc @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @objc @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) public func checkboxTapped(_ sender: UIKit.UITapGestureRecognizer)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VAvatarCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VAvatarViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VAvatarStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
public protocol VCarouselDataSource {
  func numberOfItems(inCarousel carousel: PlateauMobile.VCarousel) -> Swift.Int
  func carousel(_: PlateauMobile.VCarousel, viewForItemAt: Foundation.IndexPath, reuseView: UIKit.UIView?) -> UIKit.UIView
  func startingItemIndex(inCarousel carousel: PlateauMobile.VCarousel) -> Swift.Int
}
extension PlateauMobile.VCarouselDataSource {
  public func startingItemIndex(inCarousel carousel: PlateauMobile.VCarousel) -> Swift.Int
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VRowCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VRowStyleProps : PlateauMobile.BaseStyleProps {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VRowViewModel : PlateauMobile.BaseViewModel {
  @objc public var align: Swift.String
  @objc public var alignContent: Swift.String
  @objc public var justify: Swift.String
  @objc public var tag: Swift.String
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VRow : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) override public func applyStyleUpdates()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VStepperStepCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VStepperStepStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var borderBorderColor: Swift.String
  @objc public var fontColor: Swift.String
  @objc public var fontFamily: Swift.String
  @objc public var fontSize: Swift.String
  @objc public var fontWeight: Swift.Int
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VStepperStepViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VStepperStep : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) public var labelText: UIKit.UILabel
  @_Concurrency.MainActor(unsafe) override public func setShadows()
  @_Concurrency.MainActor(unsafe) override public func setBorders()
  @_Concurrency.MainActor(unsafe) public func labelStyleUpdates()
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class RangeSlider : UIKit.UIControl {
  @_Concurrency.MainActor(unsafe) open var minimumValue: Swift.Double {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var maximumValue: Swift.Double {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var minimumDistance: Swift.Double {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var lowerValue: Swift.Double {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var upperValue: Swift.Double {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var stepValue: Swift.Double {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var trackTintColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var trackHighlightTintColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var trackThickness: CoreFoundation.CGFloat {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var trueTrackThickness: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var dragTrack: Swift.Bool
  @_Concurrency.MainActor(unsafe) open var knobSize: CoreFoundation.CGFloat {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var trueKnobSize: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var knobTintColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var knobBorderThickness: CoreFoundation.CGFloat {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var knobBorderTintColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var selectedKnobDiameterMultiplier: CoreFoundation.CGFloat {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var knobHasShadow: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var curvaceousness: CoreFoundation.CGFloat {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var labelFont: UIKit.UIFont {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var labelColor: UIKit.UIColor {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) open var hideLabels: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var frame: CoreFoundation.CGRect {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) open func updateLayerFramesAndPositions()
  @_Concurrency.MainActor(unsafe) open func updateTrackLayerFrameAndKnobPositions()
  @_Concurrency.MainActor(unsafe) open func getLabelText(forValue value: Swift.Double) -> Swift.String
  @_Concurrency.MainActor(unsafe) open func updateLabelText()
  @_Concurrency.MainActor(unsafe) open func updateLabelPositions()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func beginTracking(_ touch: UIKit.UITouch, with event: UIKit.UIEvent?) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func continueTracking(_ touch: UIKit.UITouch, with event: UIKit.UIEvent?) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func endTracking(_ touch: UIKit.UITouch?, with event: UIKit.UIEvent?)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VBreadcrumbsItemCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VBreadcrumbsItemViewModel : PlateauMobile.BaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VBreadcrumbsItem : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VComboboxCss : PlateauMobile.InputBaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VComboboxViewModel : PlateauMobile.InputBaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VCombobox : PlateauMobile.InputBase {
  @objc @_Concurrency.MainActor(unsafe) public func clicked(_ sender: UIKit.UITapGestureRecognizer)
  @_Concurrency.MainActor(unsafe) @objc override public func textFieldDidBeginEditing(_ textField: UIKit.UITextField)
  @_Concurrency.MainActor(unsafe) @objc override public func textFieldDidEndEditing(_ textField: UIKit.UITextField)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
public enum KnobAnchorPosition {
  case inside
  case center
  public static func == (a: PlateauMobile.KnobAnchorPosition, b: PlateauMobile.KnobAnchorPosition) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers @objcMembers public class VRangeSliderCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VRangeSliderViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VRangeSlider : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override public func onViewDidAppear()
  @_Concurrency.MainActor(unsafe) public func triggerEvent(eventName: Swift.String)
  @_Concurrency.MainActor(unsafe) public func updateKnobvalue(newValue: [Swift.Int])
  @_Concurrency.MainActor(unsafe) public func updateUI()
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
  @objc @_Concurrency.MainActor(unsafe) public func onTap(_ sender: UIKit.UITapGestureRecognizer)
  @_Concurrency.MainActor(unsafe) override public func applyUIUpdates()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers public class VRadioCss : PlateauMobile.SCInputsCss {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VRadioStyleProps : PlateauMobile.BaseStyleProps {
  @objc public var selectedBorderColor: Swift.String
  @objc public var fontColor: Swift.String
  @objc public var fontSize: Swift.String
  @objc public var fontFamily: Swift.String
  @objc public var fontStyle: Swift.String
  @objc public var combinedFont: Swift.String
  @objc public var activeRadioCombinedFont: Swift.String
  @objc public var inactiveRadioCombinedFont: Swift.String
  @objc public var fontWeight: Swift.Int
  @objc public var imageSize: Swift.String
  @objc public var outerBorderColor: Swift.String
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class VRadioViewModel : PlateauMobile.SCInputsViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class VRadio : PlateauMobile.SCInputs {
  @_Concurrency.MainActor(unsafe) @objc override public func initialize()
  @_Concurrency.MainActor(unsafe) override public func applyStyleUpdates()
  @_Concurrency.MainActor(unsafe) override public func applyResizeForStyles()
  @_Concurrency.MainActor(unsafe) override public func setBorders()
  @_Concurrency.MainActor(unsafe) @objc override public func onViewDidAppear()
  @objc @_Concurrency.MainActor(unsafe) public func tapped(_ sender: UIKit.UITapGestureRecognizer)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
public struct SecurityManager {
  public static func generatePublicPrivateKeysWithReturn() -> [Swift.String : Swift.String]
  public static func getPublicKey() -> Swift.String
  public static func getPrivateKey() -> Swift.String
}
@objc @_inheritsConvenienceInitializers public class DxStateStoringCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class DxStateStoringViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class DxStateStoring : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.DxStateStoring {
  @_Concurrency.MainActor(unsafe) public func setProtocol(_ dxProtocol: PlateauMobile.DxProtocol)
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
extension PlateauMobile.DxStateStoring {
  @_Concurrency.MainActor(unsafe) public func onChange()
  @_Concurrency.MainActor(unsafe) public func initState()
}
@objc @_inheritsConvenienceInitializers public class LiveConnectionCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class LiveConnectionViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class LiveConnection : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.LiveConnection {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
extension PlateauMobile.LiveConnection : Starscream.WebSocketDelegate {
  @_Concurrency.MainActor(unsafe) public func didReceive(event: Starscream.WebSocketEvent, client: Starscream.WebSocket)
}
@objc @_inheritsConvenienceInitializers public class VBreadcrumbsCss : PlateauMobile.BaseCss {
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class VBreadcrumbsViewModel : PlateauMobile.BaseViewModel {
  @objc required dynamic public init()
  @objc required public init(props: [Swift.String : Any])
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class VBreadcrumbs : PlateauMobile.BaseComponent, PlateauMobile.QMComponent {
  @_Concurrency.MainActor(unsafe) @objc override public func setupScopedSlotUI()
  @_Concurrency.MainActor(unsafe) @objc override public func setupScopedSlots()
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init(frame: CoreFoundation.CGRect)
  @objc deinit
}
extension PlateauMobile.VBreadcrumbs {
  @_Concurrency.MainActor(unsafe) public func initialize()
  @_Concurrency.MainActor(unsafe) public func initializeUI()
  @_Concurrency.MainActor(unsafe) public func initializeBindings()
  @_Concurrency.MainActor(unsafe) public func initializeStyle()
}
extension PlateauMobile.FieldType : Swift.Equatable {}
extension PlateauMobile.FieldType : Swift.Hashable {}
extension PlateauMobile.FieldType : Swift.RawRepresentable {}
extension PlateauMobile.DataTableDataType : Swift.Equatable {}
extension PlateauMobile.DataTableDataType : Swift.Hashable {}
extension PlateauMobile.DataTableDataType : Swift.RawRepresentable {}
extension PlateauMobile.QPermissionType : Swift.Equatable {}
extension PlateauMobile.QPermissionType : Swift.Hashable {}
extension PlateauMobile.QPermissionType : Swift.RawRepresentable {}
extension PlateauMobile.Ghost : JavaScriptCore.JSExport {}
extension PlateauMobile.LogLevel : Swift.Equatable {}
extension PlateauMobile.LogLevel : Swift.Hashable {}
extension PlateauMobile.TransferObject : JavaScriptCore.JSExport {}
extension PlateauMobile.Icon : Swift.Equatable {}
extension PlateauMobile.Icon : Swift.Hashable {}
extension PlateauMobile.Icon : Swift.RawRepresentable {}
extension PlateauMobile.DayAppearanceStyle : Swift.Equatable {}
extension PlateauMobile.DayAppearanceStyle : Swift.Hashable {}
extension PlateauMobile.SwKeyStore.SecError : Swift.Equatable {}
extension PlateauMobile.SwKeyStore.SecError : Swift.Hashable {}
extension PlateauMobile.SwKeyStore.SecError : Swift.RawRepresentable {}
extension PlateauMobile.SwKeyConvert.SwError : Swift.Equatable {}
extension PlateauMobile.SwKeyConvert.SwError : Swift.Hashable {}
extension PlateauMobile.PEM.EncryptedPrivateKey.EncMode : Swift.Equatable {}
extension PlateauMobile.PEM.EncryptedPrivateKey.EncMode : Swift.Hashable {}
extension PlateauMobile.CC.CCError : Swift.Equatable {}
extension PlateauMobile.CC.CCError : Swift.Hashable {}
extension PlateauMobile.CC.CCError : Swift.RawRepresentable {}
extension PlateauMobile.CC.DigestAlgorithm : Swift.Equatable {}
extension PlateauMobile.CC.DigestAlgorithm : Swift.Hashable {}
extension PlateauMobile.CC.DigestAlgorithm : Swift.RawRepresentable {}
extension PlateauMobile.CC.HMACAlg : Swift.Equatable {}
extension PlateauMobile.CC.HMACAlg : Swift.Hashable {}
extension PlateauMobile.CC.HMACAlg : Swift.RawRepresentable {}
extension PlateauMobile.CC.OpMode : Swift.Equatable {}
extension PlateauMobile.CC.OpMode : Swift.Hashable {}
extension PlateauMobile.CC.OpMode : Swift.RawRepresentable {}
extension PlateauMobile.CC.BlockMode : Swift.Equatable {}
extension PlateauMobile.CC.BlockMode : Swift.Hashable {}
extension PlateauMobile.CC.BlockMode : Swift.RawRepresentable {}
extension PlateauMobile.CC.AuthBlockMode : Swift.Equatable {}
extension PlateauMobile.CC.AuthBlockMode : Swift.Hashable {}
extension PlateauMobile.CC.AuthBlockMode : Swift.RawRepresentable {}
extension PlateauMobile.CC.Algorithm : Swift.Equatable {}
extension PlateauMobile.CC.Algorithm : Swift.Hashable {}
extension PlateauMobile.CC.Algorithm : Swift.RawRepresentable {}
extension PlateauMobile.CC.Padding : Swift.Equatable {}
extension PlateauMobile.CC.Padding : Swift.Hashable {}
extension PlateauMobile.CC.Padding : Swift.RawRepresentable {}
extension PlateauMobile.CC.RSA.AsymmetricPadding : Swift.Equatable {}
extension PlateauMobile.CC.RSA.AsymmetricPadding : Swift.Hashable {}
extension PlateauMobile.CC.RSA.AsymmetricPadding : Swift.RawRepresentable {}
extension PlateauMobile.CC.RSA.AsymmetricSAPadding : Swift.Equatable {}
extension PlateauMobile.CC.RSA.AsymmetricSAPadding : Swift.Hashable {}
extension PlateauMobile.CC.RSA.AsymmetricSAPadding : Swift.RawRepresentable {}
extension PlateauMobile.CC.DH.DHParam : Swift.Equatable {}
extension PlateauMobile.CC.DH.DHParam : Swift.Hashable {}
extension PlateauMobile.CC.CRC.Mode : Swift.Equatable {}
extension PlateauMobile.CC.CRC.Mode : Swift.Hashable {}
extension PlateauMobile.CC.CRC.Mode : Swift.RawRepresentable {}
extension PlateauMobile.CC.KeyDerivation.PRFAlg : Swift.Equatable {}
extension PlateauMobile.CC.KeyDerivation.PRFAlg : Swift.Hashable {}
extension PlateauMobile.CC.KeyDerivation.PRFAlg : Swift.RawRepresentable {}
extension PlateauMobile.QBNetworkManager.Error : Swift.Equatable {}
extension PlateauMobile.QBNetworkManager.Error : Swift.Hashable {}
extension PlateauMobile.TextInputsVM.KeybordType : Swift.Equatable {}
extension PlateauMobile.TextInputsVM.KeybordType : Swift.Hashable {}
extension PlateauMobile.TextInputsVM.KeybordType : Swift.RawRepresentable {}
extension PlateauMobile.VBtn.ButtonType : Swift.Equatable {}
extension PlateauMobile.VBtn.ButtonType : Swift.Hashable {}
extension PlateauMobile.VBtn.ButtonType : Swift.RawRepresentable {}
extension PlateauMobile.HTTPMethodType : Swift.Equatable {}
extension PlateauMobile.HTTPMethodType : Swift.Hashable {}
extension PlateauMobile.HTTPMethodType : Swift.RawRepresentable {}
extension PlateauMobile.OperationType : Swift.Equatable {}
extension PlateauMobile.OperationType : Swift.Hashable {}
extension PlateauMobile.OperationType : Swift.RawRepresentable {}
extension PlateauMobile.DataType : Swift.Equatable {}
extension PlateauMobile.DataType : Swift.Hashable {}
extension PlateauMobile.DataType : Swift.RawRepresentable {}
extension PlateauMobile.BottomSheetController.CardState : Swift.Equatable {}
extension PlateauMobile.BottomSheetController.CardState : Swift.Hashable {}
extension PlateauMobile.KnobAnchorPosition : Swift.Equatable {}
extension PlateauMobile.KnobAnchorPosition : Swift.Hashable {}
